// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageTable renders correctly when request received 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/search/data",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/search/data",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/search/data",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <QueryClientProvider
        client={
          QueryClient {
            "defaultOptions": Object {},
            "mutationCache": MutationCache {
              "config": Object {},
              "listeners": Array [],
              "mutationId": 0,
              "mutations": Array [],
            },
            "mutationDefaults": Array [],
            "queryCache": QueryCache {
              "config": Object {},
              "listeners": Array [
                [Function],
              ],
              "queries": Array [
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Investigation",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Investigation",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Dataset",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Dataset",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Dataset",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Dataset",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Datafile",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Datafile",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Datafile",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Datafile",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "investigation",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "investigation",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "dataset",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "dataset",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "dataset",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "dataset",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "datafile",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "datafile",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "datafile",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "datafile",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"facilityCycle\\"]",
                        "queryKey": "facilityCycle",
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"facilityCycle\\"]",
                        "queryKey": "facilityCycle",
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"facilityCycle\\"]",
                    "queryKey": "facilityCycle",
                  },
                  "queryHash": "[\\"facilityCycle\\"]",
                  "queryKey": "facilityCycle",
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    InfiniteQueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "fetchNextPage": [Function],
                        "fetchPreviousPage": [Function],
                        "hasNextPage": undefined,
                        "hasPreviousPage": undefined,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isFetchingNextPage": false,
                        "isFetchingPreviousPage": false,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "behavior": Object {
                          "onFetch": [Function],
                        },
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                        "queryKey": Array [
                          "investigation",
                          Object {
                            "filters": Object {},
                            "sort": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                            Object {
                              "filterType": "include",
                              "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "fetchNextPage": [Function],
                      "fetchPreviousPage": [Function],
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "behavior": Object {
                          "onFetch": [Function],
                        },
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                        "queryKey": Array [
                          "investigation",
                          Object {
                            "filters": Object {},
                            "sort": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                            Object {
                              "filterType": "include",
                              "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "behavior": Object {
                      "onFetch": [Function],
                    },
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                    "queryKey": Array [
                      "investigation",
                      Object {
                        "filters": Object {},
                        "sort": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                        Object {
                          "filterType": "include",
                          "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                  "queryKey": Array [
                    "investigation",
                    Object {
                      "filters": Object {},
                      "sort": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                      Object {
                        "filterType": "include",
                        "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": true,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "investigationIds",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "investigationIds",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "investigationIds",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "investigationIds",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"cart\\"]",
                        "queryKey": "cart",
                        "staleTime": 0,
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"cart\\"]",
                        "queryKey": "cart",
                        "staleTime": 0,
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"cart\\"]",
                    "queryKey": "cart",
                    "staleTime": 0,
                  },
                  "queryHash": "[\\"cart\\"]",
                  "queryKey": "cart",
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
              ],
              "queriesMap": Object {
                "[\\"cart\\"]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"cart\\"]",
                        "queryKey": "cart",
                        "staleTime": 0,
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"cart\\"]",
                        "queryKey": "cart",
                        "staleTime": 0,
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"cart\\"]",
                    "queryKey": "cart",
                    "staleTime": 0,
                  },
                  "queryHash": "[\\"cart\\"]",
                  "queryKey": "cart",
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "datafile",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "datafile",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "datafile",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"datafile\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "datafile",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "dataset",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "dataset",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "dataset",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"dataset\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "dataset",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "count",
                          "investigation",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "count",
                      "investigation",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"count\\",\\"investigation\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "count",
                    "investigation",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                "[\\"facilityCycle\\"]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"facilityCycle\\"]",
                        "queryKey": "facilityCycle",
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"facilityCycle\\"]",
                        "queryKey": "facilityCycle",
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"facilityCycle\\"]",
                    "queryKey": "facilityCycle",
                  },
                  "queryHash": "[\\"facilityCycle\\"]",
                  "queryKey": "facilityCycle",
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    InfiniteQueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "fetchNextPage": [Function],
                        "fetchPreviousPage": [Function],
                        "hasNextPage": undefined,
                        "hasPreviousPage": undefined,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isFetchingNextPage": false,
                        "isFetchingPreviousPage": false,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "behavior": Object {
                          "onFetch": [Function],
                        },
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                        "queryKey": Array [
                          "investigation",
                          Object {
                            "filters": Object {},
                            "sort": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                            Object {
                              "filterType": "include",
                              "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "fetchNextPage": [Function],
                      "fetchPreviousPage": [Function],
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "behavior": Object {
                          "onFetch": [Function],
                        },
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                        "queryKey": Array [
                          "investigation",
                          Object {
                            "filters": Object {},
                            "sort": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                            Object {
                              "filterType": "include",
                              "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "behavior": Object {
                      "onFetch": [Function],
                    },
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                    "queryKey": Array [
                      "investigation",
                      Object {
                        "filters": Object {},
                        "sort": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                        Object {
                          "filterType": "include",
                          "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"investigation\\",{\\"filters\\":{},\\"sort\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"},{\\"filterType\\":\\"include\\",\\"filterValue\\":\\"{\\\\\\"investigationInstruments\\\\\\":\\\\\\"instrument\\\\\\"}\\"}]]",
                  "queryKey": Array [
                    "investigation",
                    Object {
                      "filters": Object {},
                      "sort": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                      Object {
                        "filterType": "include",
                        "filterValue": "{\\"investigationInstruments\\":\\"instrument\\"}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": true,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": true,
                        "isIdle": false,
                        "isLoading": true,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "loading",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "investigationIds",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": true,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "loading",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": true,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                        "queryKey": Array [
                          "investigationIds",
                          Object {
                            "filters": Object {},
                          },
                          Array [
                            Object {
                              "filterType": "where",
                              "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                            },
                          ],
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": true,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                    "queryKey": Array [
                      "investigationIds",
                      Object {
                        "filters": Object {},
                      },
                      Array [
                        Object {
                          "filterType": "where",
                          "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                        },
                      ],
                    ],
                  },
                  "promise": Promise {},
                  "queryHash": "[\\"investigationIds\\",{\\"filters\\":{}},[{\\"filterType\\":\\"where\\",\\"filterValue\\":\\"{\\\\\\"id\\\\\\":{\\\\\\"in\\\\\\":[]}}\\"}]]",
                  "queryKey": Array [
                    "investigationIds",
                    Object {
                      "filters": Object {},
                    },
                    Array [
                      Object {
                        "filterType": "where",
                        "filterValue": "{\\"id\\":{\\"in\\":[]}}",
                      },
                    ],
                  ],
                  "retryer": Retryer {
                    "cancel": [Function],
                    "cancelRetry": [Function],
                    "continue": [Function],
                    "failureCount": 0,
                    "isPaused": false,
                    "isResolved": false,
                    "isTransportCancelable": false,
                    "promise": Promise {},
                  },
                  "revertState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": true,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "loading",
                  },
                },
                "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Datafile",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Datafile",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Datafile",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Datafile\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Datafile",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Dataset",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Dataset",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Dataset",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Dataset\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Dataset",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
                "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]": Query {
                  "cache": [Circular],
                  "cacheTime": 300000,
                  "defaultOptions": undefined,
                  "gcTimeout": undefined,
                  "initialState": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                  "observers": Array [
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                    QueryObserver {
                      "client": [Circular],
                      "currentQuery": [Circular],
                      "currentQueryInitialState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "currentResult": Object {
                        "data": undefined,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdatedAt": 0,
                        "failureCount": 0,
                        "isError": false,
                        "isFetched": false,
                        "isFetchedAfterMount": false,
                        "isFetching": false,
                        "isIdle": true,
                        "isLoading": false,
                        "isLoadingError": false,
                        "isPlaceholderData": false,
                        "isPreviousData": false,
                        "isRefetchError": false,
                        "isStale": true,
                        "isSuccess": false,
                        "refetch": [Function],
                        "remove": [Function],
                        "status": "idle",
                      },
                      "currentResultOptions": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "currentResultState": Object {
                        "data": undefined,
                        "dataUpdateCount": 0,
                        "dataUpdatedAt": 0,
                        "error": null,
                        "errorUpdateCount": 0,
                        "errorUpdatedAt": 0,
                        "fetchFailureCount": 0,
                        "fetchMeta": null,
                        "isFetching": false,
                        "isInvalidated": false,
                        "isPaused": false,
                        "status": "idle",
                      },
                      "listeners": Array [
                        [Function],
                      ],
                      "options": Object {
                        "_defaulted": true,
                        "enabled": false,
                        "onError": [Function],
                        "optimisticResults": true,
                        "queryFn": [Function],
                        "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                        "queryKey": Array [
                          "search",
                          "Investigation",
                          Object {
                            "endDate": null,
                            "maxCount": 300,
                            "searchText": "",
                            "startDate": null,
                          },
                        ],
                      },
                      "previousQueryResult": undefined,
                      "previousSelectError": null,
                      "refetch": [Function],
                      "refetchIntervalId": undefined,
                      "remove": [Function],
                      "staleTimeoutId": undefined,
                      "trackedProps": Array [],
                    },
                  ],
                  "options": Object {
                    "_defaulted": true,
                    "enabled": false,
                    "onError": [Function],
                    "optimisticResults": true,
                    "queryFn": [Function],
                    "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                    "queryKey": Array [
                      "search",
                      "Investigation",
                      Object {
                        "endDate": null,
                        "maxCount": 300,
                        "searchText": "",
                        "startDate": null,
                      },
                    ],
                  },
                  "queryHash": "[\\"search\\",\\"Investigation\\",{\\"endDate\\":null,\\"maxCount\\":300,\\"searchText\\":\\"\\",\\"startDate\\":null}]",
                  "queryKey": Array [
                    "search",
                    "Investigation",
                    Object {
                      "endDate": null,
                      "maxCount": 300,
                      "searchText": "",
                      "startDate": null,
                    },
                  ],
                  "state": Object {
                    "data": undefined,
                    "dataUpdateCount": 0,
                    "dataUpdatedAt": 0,
                    "error": null,
                    "errorUpdateCount": 0,
                    "errorUpdatedAt": 0,
                    "fetchFailureCount": 0,
                    "fetchMeta": null,
                    "isFetching": false,
                    "isInvalidated": false,
                    "isPaused": false,
                    "status": "idle",
                  },
                },
              },
            },
            "queryDefaults": Array [],
            "unsubscribeFocus": [Function],
            "unsubscribeOnline": [Function],
          }
        }
      >
        <Connect(SearchPageTable)>
          <SearchPageTable
            currentTab="investigation"
            datafileTab={true}
            datasetTab={true}
            investigationTab={true}
            maxNumResults={300}
            setCurrentTab={[Function]}
          >
            <div>
              <WithStyles(ForwardRef(AppBar))
                position="static"
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorInherit": "MuiAppBar-colorInherit",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "colorTransparent": "MuiAppBar-colorTransparent",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  position="static"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                      >
                        <WithStyles(WithStyles(ForwardRef(Tabs)))
                          aria-label="searchPageTable.tabs_arialabel"
                          className="tour-search-tab-select"
                          onChange={[Function]}
                          value="investigation"
                        >
                          <WithStyles(ForwardRef(Tabs))
                            aria-label="searchPageTable.tabs_arialabel"
                            className="tour-search-tab-select"
                            classes={
                              Object {
                                "indicator": "WithStyles(ForwardRef(Tabs))-indicator-1",
                              }
                            }
                            onChange={[Function]}
                            value="investigation"
                          >
                            <ForwardRef(Tabs)
                              aria-label="searchPageTable.tabs_arialabel"
                              className="tour-search-tab-select"
                              classes={
                                Object {
                                  "centered": "MuiTabs-centered",
                                  "fixed": "MuiTabs-fixed",
                                  "flexContainer": "MuiTabs-flexContainer",
                                  "flexContainerVertical": "MuiTabs-flexContainerVertical",
                                  "indicator": "MuiTabs-indicator WithStyles(ForwardRef(Tabs))-indicator-1",
                                  "root": "MuiTabs-root",
                                  "scrollButtons": "MuiTabs-scrollButtons",
                                  "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                  "scrollable": "MuiTabs-scrollable",
                                  "scroller": "MuiTabs-scroller",
                                  "vertical": "MuiTabs-vertical",
                                }
                              }
                              onChange={[Function]}
                              value="investigation"
                            >
                              <div
                                className="MuiTabs-root tour-search-tab-select"
                              >
                                <div
                                  className="MuiTabs-scroller MuiTabs-fixed"
                                  onScroll={[Function]}
                                  style={
                                    Object {
                                      "marginBottom": null,
                                      "overflow": "hidden",
                                    }
                                  }
                                >
                                  <div
                                    aria-label="searchPageTable.tabs_arialabel"
                                    className="MuiTabs-flexContainer"
                                    onKeyDown={[Function]}
                                    role="tablist"
                                  >
                                    <WithStyles(ForwardRef(Tab))
                                      aria-controls="simple-tabpanel-investigation"
                                      fullWidth={false}
                                      id="simple-tab-investigation"
                                      indicator={false}
                                      key=".0"
                                      label={
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={0}
                                          id="investigation-badge"
                                          max={999}
                                          showZero={true}
                                        >
                                          <span
                                            style={
                                              Object {
                                                "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                "marginRight": "calc(0.5 * 1ch + 6px)",
                                                "paddingRight": "1ch",
                                              }
                                            }
                                          >
                                            tabs.investigation
                                          </span>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      }
                                      onChange={[Function]}
                                      selected={true}
                                      textColor="inherit"
                                      value="investigation"
                                    >
                                      <ForwardRef(Tab)
                                        aria-controls="simple-tabpanel-investigation"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "fullWidth": "MuiTab-fullWidth",
                                            "labelIcon": "MuiTab-labelIcon",
                                            "root": "MuiTab-root",
                                            "selected": "Mui-selected",
                                            "textColorInherit": "MuiTab-textColorInherit",
                                            "textColorPrimary": "MuiTab-textColorPrimary",
                                            "textColorSecondary": "MuiTab-textColorSecondary",
                                            "wrapped": "MuiTab-wrapped",
                                            "wrapper": "MuiTab-wrapper",
                                          }
                                        }
                                        fullWidth={false}
                                        id="simple-tab-investigation"
                                        indicator={false}
                                        label={
                                          <WithStyles(WithStyles(ForwardRef(Badge)))
                                            badgeContent={0}
                                            id="investigation-badge"
                                            max={999}
                                            showZero={true}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                  "marginRight": "calc(0.5 * 1ch + 6px)",
                                                  "paddingRight": "1ch",
                                                }
                                              }
                                            >
                                              tabs.investigation
                                            </span>
                                          </WithStyles(WithStyles(ForwardRef(Badge)))>
                                        }
                                        onChange={[Function]}
                                        selected={true}
                                        textColor="inherit"
                                        value="investigation"
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="simple-tabpanel-investigation"
                                          aria-selected={true}
                                          className="MuiTab-root MuiTab-textColorInherit Mui-selected"
                                          disabled={false}
                                          focusRipple={true}
                                          id="simple-tab-investigation"
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          role="tab"
                                          tabIndex={0}
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="simple-tabpanel-investigation"
                                            aria-selected={true}
                                            className="MuiTab-root MuiTab-textColorInherit Mui-selected"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            disabled={false}
                                            focusRipple={true}
                                            id="simple-tab-investigation"
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="tab"
                                            tabIndex={0}
                                          >
                                            <button
                                              aria-controls="simple-tabpanel-investigation"
                                              aria-selected={true}
                                              className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit Mui-selected"
                                              disabled={false}
                                              id="simple-tab-investigation"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="tab"
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <span
                                                className="MuiTab-wrapper"
                                              >
                                                <WithStyles(WithStyles(ForwardRef(Badge)))
                                                  badgeContent={0}
                                                  id="investigation-badge"
                                                  max={999}
                                                  showZero={true}
                                                >
                                                  <WithStyles(ForwardRef(Badge))
                                                    badgeContent={0}
                                                    classes={
                                                      Object {
                                                        "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                                      }
                                                    }
                                                    id="investigation-badge"
                                                    max={999}
                                                    showZero={true}
                                                  >
                                                    <ForwardRef(Badge)
                                                      badgeContent={0}
                                                      classes={
                                                        Object {
                                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                          "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                          "colorError": "MuiBadge-colorError",
                                                          "colorPrimary": "MuiBadge-colorPrimary",
                                                          "colorSecondary": "MuiBadge-colorSecondary",
                                                          "dot": "MuiBadge-dot",
                                                          "invisible": "MuiBadge-invisible",
                                                          "root": "MuiBadge-root",
                                                        }
                                                      }
                                                      id="investigation-badge"
                                                      max={999}
                                                      showZero={true}
                                                    >
                                                      <span
                                                        className="MuiBadge-root"
                                                        id="investigation-badge"
                                                      >
                                                        <span
                                                          style={
                                                            Object {
                                                              "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                              "marginRight": "calc(0.5 * 1ch + 6px)",
                                                              "paddingRight": "1ch",
                                                            }
                                                          }
                                                        >
                                                          tabs.investigation
                                                        </span>
                                                        <span
                                                          className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                        >
                                                          0
                                                        </span>
                                                      </span>
                                                    </ForwardRef(Badge)>
                                                  </WithStyles(ForwardRef(Badge))>
                                                </WithStyles(WithStyles(ForwardRef(Badge)))>
                                              </span>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Tab)>
                                    </WithStyles(ForwardRef(Tab))>
                                    <WithStyles(ForwardRef(Tab))
                                      aria-controls="simple-tabpanel-dataset"
                                      fullWidth={false}
                                      id="simple-tab-dataset"
                                      indicator={false}
                                      key=".1"
                                      label={
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={0}
                                          id="dataset-badge"
                                          max={999}
                                          showZero={true}
                                        >
                                          <span
                                            style={
                                              Object {
                                                "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                "marginRight": "calc(0.5 * 1ch + 6px)",
                                                "paddingRight": "1ch",
                                              }
                                            }
                                          >
                                            tabs.dataset
                                          </span>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      }
                                      onChange={[Function]}
                                      selected={false}
                                      textColor="inherit"
                                      value="dataset"
                                    >
                                      <ForwardRef(Tab)
                                        aria-controls="simple-tabpanel-dataset"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "fullWidth": "MuiTab-fullWidth",
                                            "labelIcon": "MuiTab-labelIcon",
                                            "root": "MuiTab-root",
                                            "selected": "Mui-selected",
                                            "textColorInherit": "MuiTab-textColorInherit",
                                            "textColorPrimary": "MuiTab-textColorPrimary",
                                            "textColorSecondary": "MuiTab-textColorSecondary",
                                            "wrapped": "MuiTab-wrapped",
                                            "wrapper": "MuiTab-wrapper",
                                          }
                                        }
                                        fullWidth={false}
                                        id="simple-tab-dataset"
                                        indicator={false}
                                        label={
                                          <WithStyles(WithStyles(ForwardRef(Badge)))
                                            badgeContent={0}
                                            id="dataset-badge"
                                            max={999}
                                            showZero={true}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                  "marginRight": "calc(0.5 * 1ch + 6px)",
                                                  "paddingRight": "1ch",
                                                }
                                              }
                                            >
                                              tabs.dataset
                                            </span>
                                          </WithStyles(WithStyles(ForwardRef(Badge)))>
                                        }
                                        onChange={[Function]}
                                        selected={false}
                                        textColor="inherit"
                                        value="dataset"
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="simple-tabpanel-dataset"
                                          aria-selected={false}
                                          className="MuiTab-root MuiTab-textColorInherit"
                                          disabled={false}
                                          focusRipple={true}
                                          id="simple-tab-dataset"
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="simple-tabpanel-dataset"
                                            aria-selected={false}
                                            className="MuiTab-root MuiTab-textColorInherit"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            disabled={false}
                                            focusRipple={true}
                                            id="simple-tab-dataset"
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="tab"
                                            tabIndex={-1}
                                          >
                                            <button
                                              aria-controls="simple-tabpanel-dataset"
                                              aria-selected={false}
                                              className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                              disabled={false}
                                              id="simple-tab-dataset"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="tab"
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <span
                                                className="MuiTab-wrapper"
                                              >
                                                <WithStyles(WithStyles(ForwardRef(Badge)))
                                                  badgeContent={0}
                                                  id="dataset-badge"
                                                  max={999}
                                                  showZero={true}
                                                >
                                                  <WithStyles(ForwardRef(Badge))
                                                    badgeContent={0}
                                                    classes={
                                                      Object {
                                                        "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                                      }
                                                    }
                                                    id="dataset-badge"
                                                    max={999}
                                                    showZero={true}
                                                  >
                                                    <ForwardRef(Badge)
                                                      badgeContent={0}
                                                      classes={
                                                        Object {
                                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                          "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                          "colorError": "MuiBadge-colorError",
                                                          "colorPrimary": "MuiBadge-colorPrimary",
                                                          "colorSecondary": "MuiBadge-colorSecondary",
                                                          "dot": "MuiBadge-dot",
                                                          "invisible": "MuiBadge-invisible",
                                                          "root": "MuiBadge-root",
                                                        }
                                                      }
                                                      id="dataset-badge"
                                                      max={999}
                                                      showZero={true}
                                                    >
                                                      <span
                                                        className="MuiBadge-root"
                                                        id="dataset-badge"
                                                      >
                                                        <span
                                                          style={
                                                            Object {
                                                              "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                              "marginRight": "calc(0.5 * 1ch + 6px)",
                                                              "paddingRight": "1ch",
                                                            }
                                                          }
                                                        >
                                                          tabs.dataset
                                                        </span>
                                                        <span
                                                          className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                        >
                                                          0
                                                        </span>
                                                      </span>
                                                    </ForwardRef(Badge)>
                                                  </WithStyles(ForwardRef(Badge))>
                                                </WithStyles(WithStyles(ForwardRef(Badge)))>
                                              </span>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Tab)>
                                    </WithStyles(ForwardRef(Tab))>
                                    <WithStyles(ForwardRef(Tab))
                                      aria-controls="simple-tabpanel-datafile"
                                      fullWidth={false}
                                      id="simple-tab-datafile"
                                      indicator={false}
                                      key=".2"
                                      label={
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={0}
                                          id="datafile-badge"
                                          max={999}
                                          showZero={true}
                                        >
                                          <span
                                            style={
                                              Object {
                                                "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                "marginRight": "calc(0.5 * 1ch + 6px)",
                                                "paddingRight": "1ch",
                                              }
                                            }
                                          >
                                            tabs.datafile
                                          </span>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      }
                                      onChange={[Function]}
                                      selected={false}
                                      textColor="inherit"
                                      value="datafile"
                                    >
                                      <ForwardRef(Tab)
                                        aria-controls="simple-tabpanel-datafile"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "fullWidth": "MuiTab-fullWidth",
                                            "labelIcon": "MuiTab-labelIcon",
                                            "root": "MuiTab-root",
                                            "selected": "Mui-selected",
                                            "textColorInherit": "MuiTab-textColorInherit",
                                            "textColorPrimary": "MuiTab-textColorPrimary",
                                            "textColorSecondary": "MuiTab-textColorSecondary",
                                            "wrapped": "MuiTab-wrapped",
                                            "wrapper": "MuiTab-wrapper",
                                          }
                                        }
                                        fullWidth={false}
                                        id="simple-tab-datafile"
                                        indicator={false}
                                        label={
                                          <WithStyles(WithStyles(ForwardRef(Badge)))
                                            badgeContent={0}
                                            id="datafile-badge"
                                            max={999}
                                            showZero={true}
                                          >
                                            <span
                                              style={
                                                Object {
                                                  "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                  "marginRight": "calc(0.5 * 1ch + 6px)",
                                                  "paddingRight": "1ch",
                                                }
                                              }
                                            >
                                              tabs.datafile
                                            </span>
                                          </WithStyles(WithStyles(ForwardRef(Badge)))>
                                        }
                                        onChange={[Function]}
                                        selected={false}
                                        textColor="inherit"
                                        value="datafile"
                                      >
                                        <WithStyles(ForwardRef(ButtonBase))
                                          aria-controls="simple-tabpanel-datafile"
                                          aria-selected={false}
                                          className="MuiTab-root MuiTab-textColorInherit"
                                          disabled={false}
                                          focusRipple={true}
                                          id="simple-tab-datafile"
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <ForwardRef(ButtonBase)
                                            aria-controls="simple-tabpanel-datafile"
                                            aria-selected={false}
                                            className="MuiTab-root MuiTab-textColorInherit"
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "root": "MuiButtonBase-root",
                                              }
                                            }
                                            disabled={false}
                                            focusRipple={true}
                                            id="simple-tab-datafile"
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            role="tab"
                                            tabIndex={-1}
                                          >
                                            <button
                                              aria-controls="simple-tabpanel-datafile"
                                              aria-selected={false}
                                              className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                              disabled={false}
                                              id="simple-tab-datafile"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              role="tab"
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <span
                                                className="MuiTab-wrapper"
                                              >
                                                <WithStyles(WithStyles(ForwardRef(Badge)))
                                                  badgeContent={0}
                                                  id="datafile-badge"
                                                  max={999}
                                                  showZero={true}
                                                >
                                                  <WithStyles(ForwardRef(Badge))
                                                    badgeContent={0}
                                                    classes={
                                                      Object {
                                                        "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                                      }
                                                    }
                                                    id="datafile-badge"
                                                    max={999}
                                                    showZero={true}
                                                  >
                                                    <ForwardRef(Badge)
                                                      badgeContent={0}
                                                      classes={
                                                        Object {
                                                          "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                          "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                          "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                          "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                          "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                          "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                          "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                          "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                          "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                          "colorError": "MuiBadge-colorError",
                                                          "colorPrimary": "MuiBadge-colorPrimary",
                                                          "colorSecondary": "MuiBadge-colorSecondary",
                                                          "dot": "MuiBadge-dot",
                                                          "invisible": "MuiBadge-invisible",
                                                          "root": "MuiBadge-root",
                                                        }
                                                      }
                                                      id="datafile-badge"
                                                      max={999}
                                                      showZero={true}
                                                    >
                                                      <span
                                                        className="MuiBadge-root"
                                                        id="datafile-badge"
                                                      >
                                                        <span
                                                          style={
                                                            Object {
                                                              "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                              "marginRight": "calc(0.5 * 1ch + 6px)",
                                                              "paddingRight": "1ch",
                                                            }
                                                          }
                                                        >
                                                          tabs.datafile
                                                        </span>
                                                        <span
                                                          className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                        >
                                                          0
                                                        </span>
                                                      </span>
                                                    </ForwardRef(Badge)>
                                                  </WithStyles(ForwardRef(Badge))>
                                                </WithStyles(WithStyles(ForwardRef(Badge)))>
                                              </span>
                                              <WithStyles(memo)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(memo)>
                                            </button>
                                          </ForwardRef(ButtonBase)>
                                        </WithStyles(ForwardRef(ButtonBase))>
                                      </ForwardRef(Tab)>
                                    </WithStyles(ForwardRef(Tab))>
                                  </div>
                                  <WithStyles(ForwardRef(TabIndicator))
                                    className="MuiTabs-indicator WithStyles(ForwardRef(Tabs))-indicator-1"
                                    color="secondary"
                                    orientation="horizontal"
                                    style={
                                      Object {
                                        "left": 0,
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <ForwardRef(TabIndicator)
                                      className="MuiTabs-indicator WithStyles(ForwardRef(Tabs))-indicator-1"
                                      classes={
                                        Object {
                                          "colorPrimary": "PrivateTabIndicator-colorPrimary-4",
                                          "colorSecondary": "PrivateTabIndicator-colorSecondary-5",
                                          "root": "PrivateTabIndicator-root-3",
                                          "vertical": "PrivateTabIndicator-vertical-6",
                                        }
                                      }
                                      color="secondary"
                                      orientation="horizontal"
                                      style={
                                        Object {
                                          "left": 0,
                                          "width": 0,
                                        }
                                      }
                                    >
                                      <span
                                        className="PrivateTabIndicator-root-3 PrivateTabIndicator-colorSecondary-5 MuiTabs-indicator WithStyles(ForwardRef(Tabs))-indicator-1"
                                        style={
                                          Object {
                                            "left": 0,
                                            "width": 0,
                                          }
                                        }
                                      />
                                    </ForwardRef(TabIndicator)>
                                  </WithStyles(ForwardRef(TabIndicator))>
                                </div>
                              </div>
                            </ForwardRef(Tabs)>
                          </WithStyles(ForwardRef(Tabs))>
                        </WithStyles(WithStyles(ForwardRef(Tabs)))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
              <TabPanel
                index="investigation"
                value="investigation"
              >
                <Styled(MuiBox)
                  aria-labelledby="simple-tab-investigation"
                  border={0}
                  component="div"
                  hidden={false}
                  id="simple-tabpanel-investigation"
                  role="tabpanel"
                >
                  <div
                    aria-labelledby="simple-tab-investigation"
                    className="MuiBox-root MuiBox-root-7"
                    hidden={false}
                    id="simple-tabpanel-investigation"
                    role="tabpanel"
                  >
                    <Styled(MuiBox)
                      p={3}
                    >
                      <div
                        className="MuiBox-root MuiBox-root-8"
                      >
                        <WithStyles(ForwardRef(Paper))
                          elevation={0}
                          style={
                            Object {
                              "height": "calc(undefined - 96px)",
                              "minHeight": 230,
                              "overflowX": "auto",
                            }
                          }
                        >
                          <ForwardRef(Paper)
                            classes={
                              Object {
                                "elevation0": "MuiPaper-elevation0",
                                "elevation1": "MuiPaper-elevation1",
                                "elevation10": "MuiPaper-elevation10",
                                "elevation11": "MuiPaper-elevation11",
                                "elevation12": "MuiPaper-elevation12",
                                "elevation13": "MuiPaper-elevation13",
                                "elevation14": "MuiPaper-elevation14",
                                "elevation15": "MuiPaper-elevation15",
                                "elevation16": "MuiPaper-elevation16",
                                "elevation17": "MuiPaper-elevation17",
                                "elevation18": "MuiPaper-elevation18",
                                "elevation19": "MuiPaper-elevation19",
                                "elevation2": "MuiPaper-elevation2",
                                "elevation20": "MuiPaper-elevation20",
                                "elevation21": "MuiPaper-elevation21",
                                "elevation22": "MuiPaper-elevation22",
                                "elevation23": "MuiPaper-elevation23",
                                "elevation24": "MuiPaper-elevation24",
                                "elevation3": "MuiPaper-elevation3",
                                "elevation4": "MuiPaper-elevation4",
                                "elevation5": "MuiPaper-elevation5",
                                "elevation6": "MuiPaper-elevation6",
                                "elevation7": "MuiPaper-elevation7",
                                "elevation8": "MuiPaper-elevation8",
                                "elevation9": "MuiPaper-elevation9",
                                "outlined": "MuiPaper-outlined",
                                "root": "MuiPaper-root",
                                "rounded": "MuiPaper-rounded",
                              }
                            }
                            elevation={0}
                            style={
                              Object {
                                "height": "calc(undefined - 96px)",
                                "minHeight": 230,
                                "overflowX": "auto",
                              }
                            }
                          >
                            <div
                              className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                              style={
                                Object {
                                  "height": "calc(undefined - 96px)",
                                  "minHeight": 230,
                                  "overflowX": "auto",
                                }
                              }
                            >
                              <InvestigationSearchTable>
                                <mockConstructor
                                  columns={
                                    Array [
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "title",
                                        "filterComponent": [Function],
                                        "label": "investigations.title",
                                      },
                                      Object {
                                        "dataKey": "visitId",
                                        "filterComponent": [Function],
                                        "label": "investigations.visit_id",
                                      },
                                      Object {
                                        "dataKey": "name",
                                        "filterComponent": [Function],
                                        "label": "investigations.name",
                                      },
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "doi",
                                        "filterComponent": [Function],
                                        "label": "investigations.doi",
                                      },
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "datasetCount",
                                        "disableSort": true,
                                        "label": "investigations.dataset_count",
                                      },
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "investigationInstruments.instrument.fullName",
                                        "filterComponent": [Function],
                                        "label": "investigations.instrument",
                                      },
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "startDate",
                                        "filterComponent": [Function],
                                        "label": "investigations.start_date",
                                      },
                                      Object {
                                        "cellContentRenderer": [Function],
                                        "dataKey": "endDate",
                                        "filterComponent": [Function],
                                        "label": "investigations.end_date",
                                      },
                                    ]
                                  }
                                  data={Array []}
                                  detailsPanel={[Function]}
                                  disableSelectAll={false}
                                  loadMoreRows={[Function]}
                                  loading={false}
                                  onCheck={[Function]}
                                  onSort={[Function]}
                                  onUncheck={[Function]}
                                  sort={Object {}}
                                  totalRowCount={0}
                                >
                                  MockedTable
                                </mockConstructor>
                              </InvestigationSearchTable>
                            </div>
                          </ForwardRef(Paper)>
                        </WithStyles(ForwardRef(Paper))>
                      </div>
                    </Styled(MuiBox)>
                  </div>
                </Styled(MuiBox)>
              </TabPanel>
            </div>
          </SearchPageTable>
        </Connect(SearchPageTable)>
      </QueryClientProvider>
    </Router>
  </MemoryRouter>
</Provider>
`;
