// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchPageTable renders SearchPageTable correctly after request 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(SearchPageTable)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <SearchPageTable
      datafile={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
      datafileTab={true}
      dataset={
        Array [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
        ]
      }
      datasetTab={true}
      dispatch={[Function]}
      investigation={
        Array [
          undefined,
        ]
      }
      investigationTab={true}
      requestReceived={true}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <div>
        <WithStyles(ForwardRef(AppBar))
          position="static"
        >
          <ForwardRef(AppBar)
            classes={
              Object {
                "colorDefault": "MuiAppBar-colorDefault",
                "colorInherit": "MuiAppBar-colorInherit",
                "colorPrimary": "MuiAppBar-colorPrimary",
                "colorSecondary": "MuiAppBar-colorSecondary",
                "colorTransparent": "MuiAppBar-colorTransparent",
                "positionAbsolute": "MuiAppBar-positionAbsolute",
                "positionFixed": "MuiAppBar-positionFixed",
                "positionRelative": "MuiAppBar-positionRelative",
                "positionStatic": "MuiAppBar-positionStatic",
                "positionSticky": "MuiAppBar-positionSticky",
                "root": "MuiAppBar-root",
              }
            }
            position="static"
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
              component="header"
              elevation={4}
              square={true}
            >
              <ForwardRef(Paper)
                className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                component="header"
                elevation={4}
                square={true}
              >
                <header
                  className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
                >
                  <WithStyles(ForwardRef(Tabs))
                    aria-label="searchPageTable.tabs_arialabel"
                    className="tour-search-tab-select"
                    onChange={[Function]}
                    value="investigation"
                  >
                    <ForwardRef(Tabs)
                      aria-label="searchPageTable.tabs_arialabel"
                      className="tour-search-tab-select"
                      classes={
                        Object {
                          "centered": "MuiTabs-centered",
                          "fixed": "MuiTabs-fixed",
                          "flexContainer": "MuiTabs-flexContainer",
                          "flexContainerVertical": "MuiTabs-flexContainerVertical",
                          "indicator": "MuiTabs-indicator",
                          "root": "MuiTabs-root",
                          "scrollButtons": "MuiTabs-scrollButtons",
                          "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                          "scrollable": "MuiTabs-scrollable",
                          "scroller": "MuiTabs-scroller",
                          "vertical": "MuiTabs-vertical",
                        }
                      }
                      onChange={[Function]}
                      value="investigation"
                    >
                      <div
                        className="MuiTabs-root tour-search-tab-select"
                      >
                        <div
                          className="MuiTabs-scroller MuiTabs-fixed"
                          onScroll={[Function]}
                          style={
                            Object {
                              "marginBottom": null,
                              "overflow": "hidden",
                            }
                          }
                        >
                          <div
                            aria-label="searchPageTable.tabs_arialabel"
                            className="MuiTabs-flexContainer"
                            onKeyDown={[Function]}
                            role="tablist"
                          >
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-investigation"
                              fullWidth={false}
                              id="simple-tab-investigation"
                              indicator={false}
                              key=".0"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={1}
                                  id="investigation-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                        "marginRight": "calc(0.5 * 1ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.investigation
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={true}
                              textColor="inherit"
                              value="investigation"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-investigation"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-investigation"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={1}
                                    id="investigation-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                          "marginRight": "calc(0.5 * 1ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.investigation
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={true}
                                textColor="inherit"
                                value="investigation"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-investigation"
                                  aria-selected={true}
                                  className="MuiTab-root MuiTab-textColorInherit Mui-selected"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-investigation"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={0}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-investigation"
                                    aria-selected={true}
                                    className="MuiTab-root MuiTab-textColorInherit Mui-selected"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-investigation"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={0}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-investigation"
                                      aria-selected={true}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit Mui-selected"
                                      disabled={false}
                                      id="simple-tab-investigation"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={1}
                                          id="investigation-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={1}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="investigation-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={1}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="investigation-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="investigation-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 1ch - 6px)",
                                                      "marginRight": "calc(0.5 * 1ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.investigation
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  1
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-dataset"
                              fullWidth={false}
                              id="simple-tab-dataset"
                              indicator={false}
                              key=".1"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={10}
                                  id="dataset-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                        "marginRight": "calc(0.5 * 2ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.dataset
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={false}
                              textColor="inherit"
                              value="dataset"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-dataset"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-dataset"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={10}
                                    id="dataset-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                          "marginRight": "calc(0.5 * 2ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.dataset
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={false}
                                textColor="inherit"
                                value="dataset"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-dataset"
                                  aria-selected={false}
                                  className="MuiTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-dataset"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-dataset"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorInherit"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-dataset"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-dataset"
                                      aria-selected={false}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                      disabled={false}
                                      id="simple-tab-dataset"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={10}
                                          id="dataset-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={10}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="dataset-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={10}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="dataset-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="dataset-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 2ch - 6px)",
                                                      "marginRight": "calc(0.5 * 2ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.dataset
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  10
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                            <WithStyles(ForwardRef(Tab))
                              aria-controls="simple-tabpanel-datafile"
                              fullWidth={false}
                              id="simple-tab-datafile"
                              indicator={false}
                              key=".2"
                              label={
                                <ForwardRef(WithStyles)
                                  badgeContent={100}
                                  id="datafile-badge"
                                  showZero={true}
                                >
                                  <span
                                    style={
                                      Object {
                                        "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                        "marginRight": "calc(0.5 * 3ch + 6px)",
                                        "paddingRight": "1ch",
                                      }
                                    }
                                  >
                                    tabs.datafile
                                  </span>
                                </ForwardRef(WithStyles)>
                              }
                              onChange={[Function]}
                              selected={false}
                              textColor="inherit"
                              value="datafile"
                            >
                              <ForwardRef(Tab)
                                aria-controls="simple-tabpanel-datafile"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "fullWidth": "MuiTab-fullWidth",
                                    "labelIcon": "MuiTab-labelIcon",
                                    "root": "MuiTab-root",
                                    "selected": "Mui-selected",
                                    "textColorInherit": "MuiTab-textColorInherit",
                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                    "wrapped": "MuiTab-wrapped",
                                    "wrapper": "MuiTab-wrapper",
                                  }
                                }
                                fullWidth={false}
                                id="simple-tab-datafile"
                                indicator={false}
                                label={
                                  <ForwardRef(WithStyles)
                                    badgeContent={100}
                                    id="datafile-badge"
                                    showZero={true}
                                  >
                                    <span
                                      style={
                                        Object {
                                          "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                          "marginRight": "calc(0.5 * 3ch + 6px)",
                                          "paddingRight": "1ch",
                                        }
                                      }
                                    >
                                      tabs.datafile
                                    </span>
                                  </ForwardRef(WithStyles)>
                                }
                                onChange={[Function]}
                                selected={false}
                                textColor="inherit"
                                value="datafile"
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  aria-controls="simple-tabpanel-datafile"
                                  aria-selected={false}
                                  className="MuiTab-root MuiTab-textColorInherit"
                                  disabled={false}
                                  focusRipple={true}
                                  id="simple-tab-datafile"
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(ButtonBase)
                                    aria-controls="simple-tabpanel-datafile"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorInherit"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="simple-tab-datafile"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                  >
                                    <button
                                      aria-controls="simple-tabpanel-datafile"
                                      aria-selected={false}
                                      className="MuiButtonBase-root MuiTab-root MuiTab-textColorInherit"
                                      disabled={false}
                                      id="simple-tab-datafile"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      type="button"
                                    >
                                      <span
                                        className="MuiTab-wrapper"
                                      >
                                        <WithStyles(WithStyles(ForwardRef(Badge)))
                                          badgeContent={100}
                                          id="datafile-badge"
                                          showZero={true}
                                        >
                                          <WithStyles(ForwardRef(Badge))
                                            badgeContent={100}
                                            classes={
                                              Object {
                                                "badge": "WithStyles(ForwardRef(Badge))-badge-2",
                                              }
                                            }
                                            id="datafile-badge"
                                            showZero={true}
                                          >
                                            <ForwardRef(Badge)
                                              badgeContent={100}
                                              classes={
                                                Object {
                                                  "anchorOriginBottomLeftCircle": "MuiBadge-anchorOriginBottomLeftCircle",
                                                  "anchorOriginBottomLeftRectangle": "MuiBadge-anchorOriginBottomLeftRectangle",
                                                  "anchorOriginBottomRightCircle": "MuiBadge-anchorOriginBottomRightCircle",
                                                  "anchorOriginBottomRightRectangle": "MuiBadge-anchorOriginBottomRightRectangle",
                                                  "anchorOriginTopLeftCircle": "MuiBadge-anchorOriginTopLeftCircle",
                                                  "anchorOriginTopLeftRectangle": "MuiBadge-anchorOriginTopLeftRectangle",
                                                  "anchorOriginTopRightCircle": "MuiBadge-anchorOriginTopRightCircle",
                                                  "anchorOriginTopRightRectangle": "MuiBadge-anchorOriginTopRightRectangle",
                                                  "badge": "MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2",
                                                  "colorError": "MuiBadge-colorError",
                                                  "colorPrimary": "MuiBadge-colorPrimary",
                                                  "colorSecondary": "MuiBadge-colorSecondary",
                                                  "dot": "MuiBadge-dot",
                                                  "invisible": "MuiBadge-invisible",
                                                  "root": "MuiBadge-root",
                                                }
                                              }
                                              id="datafile-badge"
                                              showZero={true}
                                            >
                                              <span
                                                className="MuiBadge-root"
                                                id="datafile-badge"
                                              >
                                                <span
                                                  style={
                                                    Object {
                                                      "marginLeft": "calc(-0.5 * 3ch - 6px)",
                                                      "marginRight": "calc(0.5 * 3ch + 6px)",
                                                      "paddingRight": "1ch",
                                                    }
                                                  }
                                                >
                                                  tabs.datafile
                                                </span>
                                                <span
                                                  className="MuiBadge-badge WithStyles(ForwardRef(Badge))-badge-2 MuiBadge-anchorOriginTopRightRectangle"
                                                >
                                                  99+
                                                </span>
                                              </span>
                                            </ForwardRef(Badge)>
                                          </WithStyles(ForwardRef(Badge))>
                                        </WithStyles(WithStyles(ForwardRef(Badge)))>
                                      </span>
                                      <WithStyles(memo)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(memo)>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(Tab)>
                            </WithStyles(ForwardRef(Tab))>
                          </div>
                          <WithStyles(ForwardRef(TabIndicator))
                            className="MuiTabs-indicator"
                            color="secondary"
                            orientation="horizontal"
                            style={
                              Object {
                                "left": 0,
                                "width": 0,
                              }
                            }
                          >
                            <ForwardRef(TabIndicator)
                              className="MuiTabs-indicator"
                              classes={
                                Object {
                                  "colorPrimary": "PrivateTabIndicator-colorPrimary-4",
                                  "colorSecondary": "PrivateTabIndicator-colorSecondary-5",
                                  "root": "PrivateTabIndicator-root-3",
                                  "vertical": "PrivateTabIndicator-vertical-6",
                                }
                              }
                              color="secondary"
                              orientation="horizontal"
                              style={
                                Object {
                                  "left": 0,
                                  "width": 0,
                                }
                              }
                            >
                              <span
                                className="PrivateTabIndicator-root-3 PrivateTabIndicator-colorSecondary-5 MuiTabs-indicator"
                                style={
                                  Object {
                                    "left": 0,
                                    "width": 0,
                                  }
                                }
                              />
                            </ForwardRef(TabIndicator)>
                          </WithStyles(ForwardRef(TabIndicator))>
                        </div>
                      </div>
                    </ForwardRef(Tabs)>
                  </WithStyles(ForwardRef(Tabs))>
                </header>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </ForwardRef(AppBar)>
        </WithStyles(ForwardRef(AppBar))>
        <TabPanel
          index="investigation"
          value="investigation"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-investigation"
            border={0}
            component="div"
            hidden={false}
            id="simple-tabpanel-investigation"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-investigation"
              className="MuiBox-root MuiBox-root-7"
              hidden={false}
              id="simple-tabpanel-investigation"
              role="tabpanel"
            >
              <Styled(MuiBox)
                p={3}
              >
                <div
                  className="MuiBox-root MuiBox-root-8"
                >
                  <WithStyles(ForwardRef(Paper))
                    elevation={0}
                    style={
                      Object {
                        "height": "calc(75vh)",
                      }
                    }
                  >
                    <ForwardRef(Paper)
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      elevation={0}
                      style={
                        Object {
                          "height": "calc(75vh)",
                        }
                      }
                    >
                      <div
                        className="MuiPaper-root MuiPaper-elevation0 MuiPaper-rounded"
                        style={
                          Object {
                            "height": "calc(75vh)",
                          }
                        }
                      >
                        <Connect(InvestigationSearchTable)>
                          <InvestigationSearchTable
                            addToCart={[Function]}
                            allIds={Array []}
                            cartItems={Array []}
                            clearTable={[Function]}
                            data={Array []}
                            error={null}
                            fetchAllIds={[Function]}
                            fetchCount={[Function]}
                            fetchData={[Function]}
                            filterTable={[Function]}
                            filters={Object {}}
                            loading={false}
                            luceneData={
                              Array [
                                undefined,
                              ]
                            }
                            removeFromCart={[Function]}
                            sort={Object {}}
                            sortTable={[Function]}
                            totalDataCount={0}
                          >
                            <WithStyles(VirtualizedTable)
                              allIds={Array []}
                              columns={
                                Array [
                                  Object {
                                    "cellContentRenderer": [Function],
                                    "dataKey": "TITLE",
                                    "filterComponent": [Function],
                                    "label": "investigations.title",
                                  },
                                  Object {
                                    "dataKey": "VISIT_ID",
                                    "filterComponent": [Function],
                                    "label": "investigations.visit_id",
                                  },
                                  Object {
                                    "dataKey": "RB_NUMBER",
                                    "filterComponent": [Function],
                                    "label": "investigations.rb_number",
                                  },
                                  Object {
                                    "dataKey": "DOI",
                                    "filterComponent": [Function],
                                    "label": "investigations.doi",
                                  },
                                  Object {
                                    "dataKey": "DATASET_COUNT",
                                    "disableSort": true,
                                    "label": "investigations.dataset_count",
                                  },
                                  Object {
                                    "cellContentRenderer": [Function],
                                    "dataKey": "INVESTIGATIONINSTRUMENT.INSTRUMENT.FULLNAME",
                                    "filterComponent": [Function],
                                    "label": "investigations.instrument",
                                  },
                                  Object {
                                    "cellContentRenderer": [Function],
                                    "dataKey": "STARTDATE",
                                    "filterComponent": [Function],
                                    "label": "investigations.start_date",
                                  },
                                  Object {
                                    "cellContentRenderer": [Function],
                                    "dataKey": "ENDDATE",
                                    "filterComponent": [Function],
                                    "label": "investigations.end_date",
                                  },
                                ]
                              }
                              data={Array []}
                              detailsPanel={[Function]}
                              loadMoreRows={[Function]}
                              loading={false}
                              onCheck={[Function]}
                              onSort={[Function]}
                              onUncheck={[Function]}
                              selectedRows={Array []}
                              sort={Object {}}
                              totalRowCount={0}
                            >
                              <VirtualizedTable
                                allIds={Array []}
                                classes={
                                  Object {
                                    "flexContainer": "VirtualizedTable-flexContainer-10",
                                    "headerFlexContainer": "VirtualizedTable-headerFlexContainer-11",
                                    "headerTableCell": "VirtualizedTable-headerTableCell-15",
                                    "table": "VirtualizedTable-table-9",
                                    "tableCell": "VirtualizedTable-tableCell-14",
                                    "tableRow": "VirtualizedTable-tableRow-12",
                                    "tableRowHover": "VirtualizedTable-tableRowHover-13",
                                  }
                                }
                                columns={
                                  Array [
                                    Object {
                                      "cellContentRenderer": [Function],
                                      "dataKey": "TITLE",
                                      "filterComponent": [Function],
                                      "label": "investigations.title",
                                    },
                                    Object {
                                      "dataKey": "VISIT_ID",
                                      "filterComponent": [Function],
                                      "label": "investigations.visit_id",
                                    },
                                    Object {
                                      "dataKey": "RB_NUMBER",
                                      "filterComponent": [Function],
                                      "label": "investigations.rb_number",
                                    },
                                    Object {
                                      "dataKey": "DOI",
                                      "filterComponent": [Function],
                                      "label": "investigations.doi",
                                    },
                                    Object {
                                      "dataKey": "DATASET_COUNT",
                                      "disableSort": true,
                                      "label": "investigations.dataset_count",
                                    },
                                    Object {
                                      "cellContentRenderer": [Function],
                                      "dataKey": "INVESTIGATIONINSTRUMENT.INSTRUMENT.FULLNAME",
                                      "filterComponent": [Function],
                                      "label": "investigations.instrument",
                                    },
                                    Object {
                                      "cellContentRenderer": [Function],
                                      "dataKey": "STARTDATE",
                                      "filterComponent": [Function],
                                      "label": "investigations.start_date",
                                    },
                                    Object {
                                      "cellContentRenderer": [Function],
                                      "dataKey": "ENDDATE",
                                      "filterComponent": [Function],
                                      "label": "investigations.end_date",
                                    },
                                  ]
                                }
                                data={Array []}
                                detailsPanel={[Function]}
                                loadMoreRows={[Function]}
                                loading={false}
                                onCheck={[Function]}
                                onSort={[Function]}
                                onUncheck={[Function]}
                                selectedRows={Array []}
                                sort={Object {}}
                                totalRowCount={0}
                              >
                                <AutoSizer
                                  disableHeight={false}
                                  disableWidth={false}
                                  onResize={[Function]}
                                  style={Object {}}
                                >
                                  <div
                                    style={
                                      Object {
                                        "height": 0,
                                        "overflow": "visible",
                                        "width": 0,
                                      }
                                    }
                                  >
                                    <InfiniteLoader
                                      isRowLoaded={[Function]}
                                      loadMoreRows={[Function]}
                                      minimumBatchSize={25}
                                      rowCount={0}
                                      threshold={15}
                                    >
                                      <Table
                                        className="VirtualizedTable-table-9"
                                        disableHeader={false}
                                        estimatedRowSize={30}
                                        headerHeight={110}
                                        headerRowRenderer={[Function]}
                                        headerStyle={Object {}}
                                        height={500}
                                        noRowsRenderer={[Function]}
                                        onRowsRendered={[Function]}
                                        onScroll={[Function]}
                                        overscanIndicesGetter={[Function]}
                                        overscanRowCount={10}
                                        rowClassName={[Function]}
                                        rowCount={0}
                                        rowGetter={[Function]}
                                        rowHeight={[Function]}
                                        rowRenderer={[Function]}
                                        rowStyle={Object {}}
                                        scrollToAlignment="auto"
                                        scrollToIndex={-1}
                                        style={Object {}}
                                        width={640}
                                      >
                                        <div
                                          aria-colcount={10}
                                          aria-rowcount={0}
                                          className="ReactVirtualized__Table VirtualizedTable-table-9"
                                          role="grid"
                                          style={Object {}}
                                        >
                                          <div
                                            className="ReactVirtualized__Table__headerRow VirtualizedTable-tableRow-12 VirtualizedTable-flexContainer-10"
                                            role="row"
                                            style={
                                              Object {
                                                "height": 110,
                                                "overflow": "hidden",
                                                "paddingRight": 0,
                                                "width": 640,
                                              }
                                            }
                                          >
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col0"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "0 0 40px",
                                                  "flex": "0 0 40px",
                                                  "msFlex": "0 0 40px",
                                                }
                                              }
                                            >
                                              <SelectHeader
                                                allIds={Array []}
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="Select"
                                                loading={false}
                                                onCheck={[Function]}
                                                onUncheck={[Function]}
                                                selectedRows={Array []}
                                                totalRowCount={0}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  padding="checkbox"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    padding="checkbox"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-paddingCheckbox MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <WithStyles(ForwardRef(Checkbox))
                                                        checked={false}
                                                        checkedIcon={
                                                          <Memo(CheckBoxIcon)
                                                            fontSize="small"
                                                          />
                                                        }
                                                        disabled={false}
                                                        icon={
                                                          <Memo(CheckBoxOutlineBlankIcon)
                                                            fontSize="small"
                                                          />
                                                        }
                                                        indeterminate={false}
                                                        indeterminateIcon={
                                                          <Memo(IndeterminateCheckBoxIcon)
                                                            fontSize="small"
                                                          />
                                                        }
                                                        inputProps={
                                                          Object {
                                                            "aria-label": "select all rows",
                                                          }
                                                        }
                                                        onClick={[Function]}
                                                        size="small"
                                                      >
                                                        <ForwardRef(Checkbox)
                                                          checked={false}
                                                          checkedIcon={
                                                            <Memo(CheckBoxIcon)
                                                              fontSize="small"
                                                            />
                                                          }
                                                          classes={
                                                            Object {
                                                              "checked": "Mui-checked",
                                                              "colorPrimary": "MuiCheckbox-colorPrimary",
                                                              "colorSecondary": "MuiCheckbox-colorSecondary",
                                                              "disabled": "Mui-disabled",
                                                              "indeterminate": "MuiCheckbox-indeterminate",
                                                              "root": "MuiCheckbox-root",
                                                            }
                                                          }
                                                          disabled={false}
                                                          icon={
                                                            <Memo(CheckBoxOutlineBlankIcon)
                                                              fontSize="small"
                                                            />
                                                          }
                                                          indeterminate={false}
                                                          indeterminateIcon={
                                                            <Memo(IndeterminateCheckBoxIcon)
                                                              fontSize="small"
                                                            />
                                                          }
                                                          inputProps={
                                                            Object {
                                                              "aria-label": "select all rows",
                                                            }
                                                          }
                                                          onClick={[Function]}
                                                          size="small"
                                                        >
                                                          <WithStyles(ForwardRef(SwitchBase))
                                                            checked={false}
                                                            checkedIcon={
                                                              <Memo(CheckBoxIcon)
                                                                fontSize="small"
                                                              />
                                                            }
                                                            classes={
                                                              Object {
                                                                "checked": "Mui-checked",
                                                                "disabled": "Mui-disabled",
                                                                "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                              }
                                                            }
                                                            color="secondary"
                                                            disabled={false}
                                                            icon={
                                                              <Memo(CheckBoxOutlineBlankIcon)
                                                                fontSize="small"
                                                              />
                                                            }
                                                            inputProps={
                                                              Object {
                                                                "aria-label": "select all rows",
                                                                "data-indeterminate": false,
                                                              }
                                                            }
                                                            onClick={[Function]}
                                                            type="checkbox"
                                                          >
                                                            <ForwardRef(SwitchBase)
                                                              checked={false}
                                                              checkedIcon={
                                                                <Memo(CheckBoxIcon)
                                                                  fontSize="small"
                                                                />
                                                              }
                                                              classes={
                                                                Object {
                                                                  "checked": "PrivateSwitchBase-checked-17 Mui-checked",
                                                                  "disabled": "PrivateSwitchBase-disabled-18 Mui-disabled",
                                                                  "input": "PrivateSwitchBase-input-19",
                                                                  "root": "PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                                }
                                                              }
                                                              color="secondary"
                                                              disabled={false}
                                                              icon={
                                                                <Memo(CheckBoxOutlineBlankIcon)
                                                                  fontSize="small"
                                                                />
                                                              }
                                                              inputProps={
                                                                Object {
                                                                  "aria-label": "select all rows",
                                                                  "data-indeterminate": false,
                                                                }
                                                              }
                                                              onClick={[Function]}
                                                              type="checkbox"
                                                            >
                                                              <WithStyles(ForwardRef(IconButton))
                                                                className="PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                                color="secondary"
                                                                component="span"
                                                                disabled={false}
                                                                onBlur={[Function]}
                                                                onClick={[Function]}
                                                                onFocus={[Function]}
                                                                tabIndex={null}
                                                              >
                                                                <ForwardRef(IconButton)
                                                                  className="PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                                  classes={
                                                                    Object {
                                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                                      "label": "MuiIconButton-label",
                                                                      "root": "MuiIconButton-root",
                                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  component="span"
                                                                  disabled={false}
                                                                  onBlur={[Function]}
                                                                  onClick={[Function]}
                                                                  onFocus={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <WithStyles(ForwardRef(ButtonBase))
                                                                    centerRipple={true}
                                                                    className="MuiIconButton-root PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                    component="span"
                                                                    disabled={false}
                                                                    focusRipple={true}
                                                                    onBlur={[Function]}
                                                                    onClick={[Function]}
                                                                    onFocus={[Function]}
                                                                    tabIndex={null}
                                                                  >
                                                                    <ForwardRef(ButtonBase)
                                                                      centerRipple={true}
                                                                      className="MuiIconButton-root PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                      classes={
                                                                        Object {
                                                                          "disabled": "Mui-disabled",
                                                                          "focusVisible": "Mui-focusVisible",
                                                                          "root": "MuiButtonBase-root",
                                                                        }
                                                                      }
                                                                      component="span"
                                                                      disabled={false}
                                                                      focusRipple={true}
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onFocus={[Function]}
                                                                      tabIndex={null}
                                                                    >
                                                                      <span
                                                                        aria-disabled={false}
                                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-16 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                        onBlur={[Function]}
                                                                        onClick={[Function]}
                                                                        onDragLeave={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        onKeyUp={[Function]}
                                                                        onMouseDown={[Function]}
                                                                        onMouseLeave={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        onTouchEnd={[Function]}
                                                                        onTouchMove={[Function]}
                                                                        onTouchStart={[Function]}
                                                                        tabIndex={null}
                                                                      >
                                                                        <span
                                                                          className="MuiIconButton-label"
                                                                        >
                                                                          <input
                                                                            aria-label="select all rows"
                                                                            checked={false}
                                                                            className="PrivateSwitchBase-input-19"
                                                                            data-indeterminate={false}
                                                                            disabled={false}
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                          <ForwardRef
                                                                            fontSize="small"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              fontSize="small"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                                fontSize="small"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef>
                                                                        </span>
                                                                        <WithStyles(memo)
                                                                          center={true}
                                                                        >
                                                                          <ForwardRef(TouchRipple)
                                                                            center={true}
                                                                            classes={
                                                                              Object {
                                                                                "child": "MuiTouchRipple-child",
                                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                "ripple": "MuiTouchRipple-ripple",
                                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                "root": "MuiTouchRipple-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              className="MuiTouchRipple-root"
                                                                            >
                                                                              <TransitionGroup
                                                                                childFactory={[Function]}
                                                                                component={null}
                                                                                exit={true}
                                                                              />
                                                                            </span>
                                                                          </ForwardRef(TouchRipple)>
                                                                        </WithStyles(memo)>
                                                                      </span>
                                                                    </ForwardRef(ButtonBase)>
                                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                                </ForwardRef(IconButton)>
                                                              </WithStyles(ForwardRef(IconButton))>
                                                            </ForwardRef(SwitchBase)>
                                                          </WithStyles(ForwardRef(SwitchBase))>
                                                        </ForwardRef(Checkbox)>
                                                      </WithStyles(ForwardRef(Checkbox))>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </SelectHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col1"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "0 0 40px",
                                                  "flex": "0 0 40px",
                                                  "msFlex": "0 0 40px",
                                                }
                                              }
                                            >
                                              <WithStyles(ForwardRef(TableCell))
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-flexContainer-10"
                                                component="div"
                                                padding="checkbox"
                                                size="small"
                                                variant="head"
                                              >
                                                <ForwardRef(TableCell)
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-flexContainer-10"
                                                  classes={
                                                    Object {
                                                      "alignCenter": "MuiTableCell-alignCenter",
                                                      "alignJustify": "MuiTableCell-alignJustify",
                                                      "alignLeft": "MuiTableCell-alignLeft",
                                                      "alignRight": "MuiTableCell-alignRight",
                                                      "body": "MuiTableCell-body",
                                                      "footer": "MuiTableCell-footer",
                                                      "head": "MuiTableCell-head",
                                                      "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                      "paddingNone": "MuiTableCell-paddingNone",
                                                      "root": "MuiTableCell-root",
                                                      "sizeSmall": "MuiTableCell-sizeSmall",
                                                      "stickyHeader": "MuiTableCell-stickyHeader",
                                                    }
                                                  }
                                                  component="div"
                                                  padding="checkbox"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <div
                                                    aria-sort={null}
                                                    className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-flexContainer-10 MuiTableCell-paddingCheckbox MuiTableCell-sizeSmall"
                                                    role="cell"
                                                  />
                                                </ForwardRef(TableCell)>
                                              </WithStyles(ForwardRef(TableCell))>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col2"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="TITLE"
                                                filterComponent={
                                                  <TextColumnFilter
                                                    label="investigations.title"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.title"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-20"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-21"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-22"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.title
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <TextColumnFilter
                                                          label="investigations.title"
                                                          onChange={[Function]}
                                                        >
                                                          <div>
                                                            <WithStyles(ForwardRef(Input))
                                                              aria-label="Filter by investigations.title"
                                                              color="secondary"
                                                              fullWidth={true}
                                                              id="investigations.title filter"
                                                              onChange={[Function]}
                                                              placeholder="Contains..."
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                aria-label="Filter by investigations.title"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                fullWidth={true}
                                                                id="investigations.title filter"
                                                                onChange={[Function]}
                                                                placeholder="Contains..."
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  aria-label="Filter by investigations.title"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  fullWidth={true}
                                                                  id="investigations.title filter"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  placeholder="Contains..."
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    aria-label="Filter by investigations.title"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    fullWidth={true}
                                                                    id="investigations.title filter"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    placeholder="Contains..."
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      aria-label="Filter by investigations.title"
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-fullWidth MuiInput-fullWidth"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <input
                                                                        className="MuiInputBase-input MuiInput-input"
                                                                        id="investigations.title filter"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder="Contains..."
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </TextColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col3"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="VISIT_ID"
                                                filterComponent={
                                                  <TextColumnFilter
                                                    label="investigations.visit_id"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.visit_id"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-23"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-24"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-25"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.visit_id
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <TextColumnFilter
                                                          label="investigations.visit_id"
                                                          onChange={[Function]}
                                                        >
                                                          <div>
                                                            <WithStyles(ForwardRef(Input))
                                                              aria-label="Filter by investigations.visit_id"
                                                              color="secondary"
                                                              fullWidth={true}
                                                              id="investigations.visit_id filter"
                                                              onChange={[Function]}
                                                              placeholder="Contains..."
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                aria-label="Filter by investigations.visit_id"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                fullWidth={true}
                                                                id="investigations.visit_id filter"
                                                                onChange={[Function]}
                                                                placeholder="Contains..."
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  aria-label="Filter by investigations.visit_id"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  fullWidth={true}
                                                                  id="investigations.visit_id filter"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  placeholder="Contains..."
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    aria-label="Filter by investigations.visit_id"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    fullWidth={true}
                                                                    id="investigations.visit_id filter"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    placeholder="Contains..."
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      aria-label="Filter by investigations.visit_id"
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-fullWidth MuiInput-fullWidth"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <input
                                                                        className="MuiInputBase-input MuiInput-input"
                                                                        id="investigations.visit_id filter"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder="Contains..."
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </TextColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col4"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="RB_NUMBER"
                                                filterComponent={
                                                  <TextColumnFilter
                                                    label="investigations.rb_number"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.rb_number"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-26"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-27"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-28"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.rb_number
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <TextColumnFilter
                                                          label="investigations.rb_number"
                                                          onChange={[Function]}
                                                        >
                                                          <div>
                                                            <WithStyles(ForwardRef(Input))
                                                              aria-label="Filter by investigations.rb_number"
                                                              color="secondary"
                                                              fullWidth={true}
                                                              id="investigations.rb_number filter"
                                                              onChange={[Function]}
                                                              placeholder="Contains..."
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                aria-label="Filter by investigations.rb_number"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                fullWidth={true}
                                                                id="investigations.rb_number filter"
                                                                onChange={[Function]}
                                                                placeholder="Contains..."
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  aria-label="Filter by investigations.rb_number"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  fullWidth={true}
                                                                  id="investigations.rb_number filter"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  placeholder="Contains..."
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    aria-label="Filter by investigations.rb_number"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    fullWidth={true}
                                                                    id="investigations.rb_number filter"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    placeholder="Contains..."
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      aria-label="Filter by investigations.rb_number"
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-fullWidth MuiInput-fullWidth"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <input
                                                                        className="MuiInputBase-input MuiInput-input"
                                                                        id="investigations.rb_number filter"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder="Contains..."
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </TextColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col5"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="DOI"
                                                filterComponent={
                                                  <TextColumnFilter
                                                    label="investigations.doi"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.doi"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-29"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-30"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-31"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.doi
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <TextColumnFilter
                                                          label="investigations.doi"
                                                          onChange={[Function]}
                                                        >
                                                          <div>
                                                            <WithStyles(ForwardRef(Input))
                                                              aria-label="Filter by investigations.doi"
                                                              color="secondary"
                                                              fullWidth={true}
                                                              id="investigations.doi filter"
                                                              onChange={[Function]}
                                                              placeholder="Contains..."
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                aria-label="Filter by investigations.doi"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                fullWidth={true}
                                                                id="investigations.doi filter"
                                                                onChange={[Function]}
                                                                placeholder="Contains..."
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  aria-label="Filter by investigations.doi"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  fullWidth={true}
                                                                  id="investigations.doi filter"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  placeholder="Contains..."
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    aria-label="Filter by investigations.doi"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    fullWidth={true}
                                                                    id="investigations.doi filter"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    placeholder="Contains..."
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      aria-label="Filter by investigations.doi"
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-fullWidth MuiInput-fullWidth"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <input
                                                                        className="MuiInputBase-input MuiInput-input"
                                                                        id="investigations.doi filter"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder="Contains..."
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </TextColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col6"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="DATASET_COUNT"
                                                disableSort={true}
                                                label="investigations.dataset_count"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-32"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-33"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-34"
                                                              >
                                                                investigations.dataset_count
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col7"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="INVESTIGATIONINSTRUMENT.INSTRUMENT.FULLNAME"
                                                filterComponent={
                                                  <TextColumnFilter
                                                    label="investigations.instrument"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.instrument"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-35"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-36"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-37"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.instrument
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <TextColumnFilter
                                                          label="investigations.instrument"
                                                          onChange={[Function]}
                                                        >
                                                          <div>
                                                            <WithStyles(ForwardRef(Input))
                                                              aria-label="Filter by investigations.instrument"
                                                              color="secondary"
                                                              fullWidth={true}
                                                              id="investigations.instrument filter"
                                                              onChange={[Function]}
                                                              placeholder="Contains..."
                                                              value=""
                                                            >
                                                              <ForwardRef(Input)
                                                                aria-label="Filter by investigations.instrument"
                                                                classes={
                                                                  Object {
                                                                    "colorSecondary": "MuiInput-colorSecondary",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "formControl": "MuiInput-formControl",
                                                                    "fullWidth": "MuiInput-fullWidth",
                                                                    "input": "MuiInput-input",
                                                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                                                    "inputMultiline": "MuiInput-inputMultiline",
                                                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                    "marginDense": "MuiInput-marginDense",
                                                                    "multiline": "MuiInput-multiline",
                                                                    "root": "MuiInput-root",
                                                                    "underline": "MuiInput-underline",
                                                                  }
                                                                }
                                                                color="secondary"
                                                                fullWidth={true}
                                                                id="investigations.instrument filter"
                                                                onChange={[Function]}
                                                                placeholder="Contains..."
                                                                value=""
                                                              >
                                                                <WithStyles(ForwardRef(InputBase))
                                                                  aria-label="Filter by investigations.instrument"
                                                                  classes={
                                                                    Object {
                                                                      "colorSecondary": "MuiInput-colorSecondary",
                                                                      "disabled": "Mui-disabled",
                                                                      "error": "Mui-error",
                                                                      "focused": "Mui-focused",
                                                                      "formControl": "MuiInput-formControl",
                                                                      "fullWidth": "MuiInput-fullWidth",
                                                                      "input": "MuiInput-input",
                                                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInput-inputMultiline",
                                                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                      "marginDense": "MuiInput-marginDense",
                                                                      "multiline": "MuiInput-multiline",
                                                                      "root": "MuiInput-root MuiInput-underline",
                                                                      "underline": null,
                                                                    }
                                                                  }
                                                                  color="secondary"
                                                                  fullWidth={true}
                                                                  id="investigations.instrument filter"
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  placeholder="Contains..."
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <ForwardRef(InputBase)
                                                                    aria-label="Filter by investigations.instrument"
                                                                    classes={
                                                                      Object {
                                                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                                                        "adornedStart": "MuiInputBase-adornedStart",
                                                                        "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                        "disabled": "Mui-disabled Mui-disabled",
                                                                        "error": "Mui-error Mui-error",
                                                                        "focused": "Mui-focused Mui-focused",
                                                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                        "input": "MuiInputBase-input MuiInput-input",
                                                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                        "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                      }
                                                                    }
                                                                    color="secondary"
                                                                    fullWidth={true}
                                                                    id="investigations.instrument filter"
                                                                    inputComponent="input"
                                                                    multiline={false}
                                                                    onChange={[Function]}
                                                                    placeholder="Contains..."
                                                                    type="text"
                                                                    value=""
                                                                  >
                                                                    <div
                                                                      aria-label="Filter by investigations.instrument"
                                                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-fullWidth MuiInput-fullWidth"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <input
                                                                        className="MuiInputBase-input MuiInput-input"
                                                                        id="investigations.instrument filter"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        placeholder="Contains..."
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </div>
                                                                  </ForwardRef(InputBase)>
                                                                </WithStyles(ForwardRef(InputBase))>
                                                              </ForwardRef(Input)>
                                                            </WithStyles(ForwardRef(Input))>
                                                          </div>
                                                        </TextColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col8"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="STARTDATE"
                                                filterComponent={
                                                  <DateColumnFilter
                                                    label="investigations.start_date"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.start_date"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-38"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-39"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-40"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.start_date
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <DateColumnFilter
                                                          label="investigations.start_date"
                                                          onChange={[Function]}
                                                        >
                                                          <form>
                                                            <MuiPickersUtilsProvider
                                                              utils={[Function]}
                                                            >
                                                              <PickerWithState
                                                                KeyboardButtonProps={
                                                                  Object {
                                                                    "size": "small",
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                clearable={true}
                                                                color="secondary"
                                                                format="yyyy-MM-dd"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "investigations.start_date date filter from",
                                                                  }
                                                                }
                                                                invalidDateMessage="Invalid Date Format"
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Invalid date range"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Date should not be before minimal date"
                                                                onChange={[Function]}
                                                                openTo="date"
                                                                placeholder="From... (yyyy-MM-dd)"
                                                                value={null}
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "month",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  KeyboardButtonProps={
                                                                    Object {
                                                                      "size": "small",
                                                                    }
                                                                  }
                                                                  clearable={true}
                                                                  color="secondary"
                                                                  format="yyyy-MM-dd"
                                                                  inputProps={
                                                                    Object {
                                                                      "aria-label": "investigations.start_date date filter from",
                                                                    }
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  placeholder="From... (yyyy-MM-dd)"
                                                                >
                                                                  <ModalWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    KeyboardButtonProps={
                                                                      Object {
                                                                        "size": "small",
                                                                      }
                                                                    }
                                                                    cancelLabel="Cancel"
                                                                    clearLabel="Clear"
                                                                    clearable={true}
                                                                    color="secondary"
                                                                    format="yyyy-MM-dd"
                                                                    inputProps={
                                                                      Object {
                                                                        "aria-label": "investigations.start_date date filter from",
                                                                      }
                                                                    }
                                                                    okLabel="OK"
                                                                    onAccept={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                    placeholder="From... (yyyy-MM-dd)"
                                                                    showTodayButton={false}
                                                                    todayLabel="Today"
                                                                  >
                                                                    <KeyboardDateInput
                                                                      KeyboardButtonProps={
                                                                        Object {
                                                                          "size": "small",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      format="yyyy-MM-dd"
                                                                      inputProps={
                                                                        Object {
                                                                          "aria-label": "investigations.start_date date filter from",
                                                                        }
                                                                      }
                                                                      inputValue=""
                                                                      keyboardIcon={<KeyboardIcon />}
                                                                      onChange={[Function]}
                                                                      openPicker={[Function]}
                                                                      placeholder="From... (yyyy-MM-dd)"
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value=""
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                  size="small"
                                                                                >
                                                                                  <KeyboardIcon />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          error={false}
                                                                          helperText=""
                                                                          inputProps={
                                                                            Object {
                                                                              "aria-label": "investigations.start_date date filter from",
                                                                            }
                                                                          }
                                                                          onChange={[Function]}
                                                                          placeholder="From... (yyyy-MM-dd)"
                                                                          value=""
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                    size="small"
                                                                                  >
                                                                                    <KeyboardIcon />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            color="secondary"
                                                                            error={false}
                                                                            helperText=""
                                                                            inputProps={
                                                                              Object {
                                                                                "aria-label": "investigations.start_date date filter from",
                                                                              }
                                                                            }
                                                                            onChange={[Function]}
                                                                            placeholder="From... (yyyy-MM-dd)"
                                                                            value=""
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="secondary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="standard"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="secondary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="standard"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Input))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                          size="small"
                                                                                        >
                                                                                          <KeyboardIcon />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    inputProps={
                                                                                      Object {
                                                                                        "aria-label": "investigations.start_date date filter from",
                                                                                      }
                                                                                    }
                                                                                    multiline={false}
                                                                                    onChange={[Function]}
                                                                                    placeholder="From... (yyyy-MM-dd)"
                                                                                    value=""
                                                                                  >
                                                                                    <ForwardRef(Input)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "formControl": "MuiInput-formControl",
                                                                                          "fullWidth": "MuiInput-fullWidth",
                                                                                          "input": "MuiInput-input",
                                                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                          "marginDense": "MuiInput-marginDense",
                                                                                          "multiline": "MuiInput-multiline",
                                                                                          "root": "MuiInput-root",
                                                                                          "underline": "MuiInput-underline",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                            size="small"
                                                                                          >
                                                                                            <KeyboardIcon />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      inputProps={
                                                                                        Object {
                                                                                          "aria-label": "investigations.start_date date filter from",
                                                                                        }
                                                                                      }
                                                                                      multiline={false}
                                                                                      onChange={[Function]}
                                                                                      placeholder="From... (yyyy-MM-dd)"
                                                                                      value=""
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "formControl": "MuiInput-formControl",
                                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                                            "input": "MuiInput-input",
                                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                            "marginDense": "MuiInput-marginDense",
                                                                                            "multiline": "MuiInput-multiline",
                                                                                            "root": "MuiInput-root MuiInput-underline",
                                                                                            "underline": null,
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                              size="small"
                                                                                            >
                                                                                              <KeyboardIcon />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        inputComponent="input"
                                                                                        inputProps={
                                                                                          Object {
                                                                                            "aria-label": "investigations.start_date date filter from",
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="From... (yyyy-MM-dd)"
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                                size="small"
                                                                                              >
                                                                                                <KeyboardIcon />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          inputComponent="input"
                                                                                          inputProps={
                                                                                            Object {
                                                                                              "aria-label": "investigations.start_date date filter from",
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onChange={[Function]}
                                                                                          placeholder="From... (yyyy-MM-dd)"
                                                                                          type="text"
                                                                                          value=""
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              aria-label="investigations.start_date date filter from"
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              placeholder="From... (yyyy-MM-dd)"
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                    size="small"
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                      size="small"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <KeyboardIcon>
                                                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                  <ForwardRef(SvgIcon)
                                                                                                                    classes={
                                                                                                                      Object {
                                                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                                        "root": "MuiSvgIcon-root",
                                                                                                                      }
                                                                                                                    }
                                                                                                                  >
                                                                                                                    <svg
                                                                                                                      aria-hidden={true}
                                                                                                                      className="MuiSvgIcon-root"
                                                                                                                      focusable="false"
                                                                                                                      viewBox="0 0 24 24"
                                                                                                                    >
                                                                                                                      <path
                                                                                                                        d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                                                      />
                                                                                                                      <path
                                                                                                                        d="M0 0h24v24H0z"
                                                                                                                        fill="none"
                                                                                                                      />
                                                                                                                    </svg>
                                                                                                                  </ForwardRef(SvgIcon)>
                                                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                                                              </KeyboardIcon>
                                                                                                            </span>
                                                                                                            <WithStyles(memo)
                                                                                                              center={true}
                                                                                                            >
                                                                                                              <ForwardRef(TouchRipple)
                                                                                                                center={true}
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                                  }
                                                                                                                }
                                                                                                              >
                                                                                                                <span
                                                                                                                  className="MuiTouchRipple-root"
                                                                                                                >
                                                                                                                  <TransitionGroup
                                                                                                                    childFactory={[Function]}
                                                                                                                    component={null}
                                                                                                                    exit={true}
                                                                                                                  />
                                                                                                                </span>
                                                                                                              </ForwardRef(TouchRipple)>
                                                                                                            </WithStyles(memo)>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(Input)>
                                                                                  </WithStyles(ForwardRef(Input))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ModalDialog)
                                                                      cancelLabel="Cancel"
                                                                      clearLabel="Clear"
                                                                      clearable={true}
                                                                      okLabel="OK"
                                                                      onAccept={[Function]}
                                                                      onClear={[Function]}
                                                                      onDismiss={[Function]}
                                                                      onSetToday={[Function]}
                                                                      open={false}
                                                                      showTodayButton={false}
                                                                      todayLabel="Today"
                                                                    >
                                                                      <ModalDialog
                                                                        cancelLabel="Cancel"
                                                                        classes={
                                                                          Object {
                                                                            "dialog": "MuiPickersModal-dialog",
                                                                            "dialogRoot": "MuiPickersModal-dialogRoot",
                                                                            "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                                            "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                                          }
                                                                        }
                                                                        clearLabel="Clear"
                                                                        clearable={true}
                                                                        okLabel="OK"
                                                                        onAccept={[Function]}
                                                                        onClear={[Function]}
                                                                        onDismiss={[Function]}
                                                                        onSetToday={[Function]}
                                                                        open={false}
                                                                        showTodayButton={false}
                                                                        todayLabel="Today"
                                                                      >
                                                                        <WithStyles(ForwardRef(Dialog))
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPickersModal-dialogRoot",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          role="dialog"
                                                                        >
                                                                          <ForwardRef(Dialog)
                                                                            classes={
                                                                              Object {
                                                                                "container": "MuiDialog-container",
                                                                                "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                                                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                                                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                                                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                                                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                                                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                                                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                                                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                                                                "root": "MuiDialog-root",
                                                                                "scrollBody": "MuiDialog-scrollBody",
                                                                                "scrollPaper": "MuiDialog-scrollPaper",
                                                                              }
                                                                            }
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            role="dialog"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "Naked": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "propTypes": Object {
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "classes": [Function],
                                                                                      "invisible": [Function],
                                                                                      "open": [Function],
                                                                                      "transitionDuration": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                                                                  "options": Object {
                                                                                    "defaultTheme": Object {
                                                                                      "breakpoints": Object {
                                                                                        "between": [Function],
                                                                                        "down": [Function],
                                                                                        "keys": Array [
                                                                                          "xs",
                                                                                          "sm",
                                                                                          "md",
                                                                                          "lg",
                                                                                          "xl",
                                                                                        ],
                                                                                        "only": [Function],
                                                                                        "up": [Function],
                                                                                        "values": Object {
                                                                                          "lg": 1280,
                                                                                          "md": 960,
                                                                                          "sm": 600,
                                                                                          "xl": 1920,
                                                                                          "xs": 0,
                                                                                        },
                                                                                        "width": [Function],
                                                                                      },
                                                                                      "direction": "ltr",
                                                                                      "mixins": Object {
                                                                                        "gutters": [Function],
                                                                                        "toolbar": Object {
                                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                            "minHeight": 48,
                                                                                          },
                                                                                          "@media (min-width:600px)": Object {
                                                                                            "minHeight": 64,
                                                                                          },
                                                                                          "minHeight": 56,
                                                                                        },
                                                                                      },
                                                                                      "overrides": Object {},
                                                                                      "palette": Object {
                                                                                        "action": Object {
                                                                                          "activatedOpacity": 0.12,
                                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                          "disabledOpacity": 0.38,
                                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                                          "focusOpacity": 0.12,
                                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                                          "hoverOpacity": 0.04,
                                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                                          "selectedOpacity": 0.08,
                                                                                        },
                                                                                        "augmentColor": [Function],
                                                                                        "background": Object {
                                                                                          "default": "#fafafa",
                                                                                          "paper": "#fff",
                                                                                        },
                                                                                        "common": Object {
                                                                                          "black": "#000",
                                                                                          "white": "#fff",
                                                                                        },
                                                                                        "contrastThreshold": 3,
                                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                                        "error": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#d32f2f",
                                                                                          "light": "#e57373",
                                                                                          "main": "#f44336",
                                                                                        },
                                                                                        "getContrastText": [Function],
                                                                                        "grey": Object {
                                                                                          "100": "#f5f5f5",
                                                                                          "200": "#eeeeee",
                                                                                          "300": "#e0e0e0",
                                                                                          "400": "#bdbdbd",
                                                                                          "50": "#fafafa",
                                                                                          "500": "#9e9e9e",
                                                                                          "600": "#757575",
                                                                                          "700": "#616161",
                                                                                          "800": "#424242",
                                                                                          "900": "#212121",
                                                                                          "A100": "#d5d5d5",
                                                                                          "A200": "#aaaaaa",
                                                                                          "A400": "#303030",
                                                                                          "A700": "#616161",
                                                                                        },
                                                                                        "info": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#1976d2",
                                                                                          "light": "#64b5f6",
                                                                                          "main": "#2196f3",
                                                                                        },
                                                                                        "primary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#303f9f",
                                                                                          "light": "#7986cb",
                                                                                          "main": "#3f51b5",
                                                                                        },
                                                                                        "secondary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#c51162",
                                                                                          "light": "#ff4081",
                                                                                          "main": "#f50057",
                                                                                        },
                                                                                        "success": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#388e3c",
                                                                                          "light": "#81c784",
                                                                                          "main": "#4caf50",
                                                                                        },
                                                                                        "text": Object {
                                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                        },
                                                                                        "tonalOffset": 0.2,
                                                                                        "type": "light",
                                                                                        "warning": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#f57c00",
                                                                                          "light": "#ffb74d",
                                                                                          "main": "#ff9800",
                                                                                        },
                                                                                      },
                                                                                      "props": Object {},
                                                                                      "shadows": Array [
                                                                                        "none",
                                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                      ],
                                                                                      "shape": Object {
                                                                                        "borderRadius": 4,
                                                                                      },
                                                                                      "spacing": [Function],
                                                                                      "transitions": Object {
                                                                                        "create": [Function],
                                                                                        "duration": Object {
                                                                                          "complex": 375,
                                                                                          "enteringScreen": 225,
                                                                                          "leavingScreen": 195,
                                                                                          "short": 250,
                                                                                          "shorter": 200,
                                                                                          "shortest": 150,
                                                                                          "standard": 300,
                                                                                        },
                                                                                        "easing": Object {
                                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                        },
                                                                                        "getAutoHeightDuration": [Function],
                                                                                      },
                                                                                      "typography": Object {
                                                                                        "body1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.5,
                                                                                        },
                                                                                        "body2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.01071em",
                                                                                          "lineHeight": 1.43,
                                                                                        },
                                                                                        "button": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.02857em",
                                                                                          "lineHeight": 1.75,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "caption": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.03333em",
                                                                                          "lineHeight": 1.66,
                                                                                        },
                                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                        "fontSize": 14,
                                                                                        "fontWeightBold": 700,
                                                                                        "fontWeightLight": 300,
                                                                                        "fontWeightMedium": 500,
                                                                                        "fontWeightRegular": 400,
                                                                                        "h1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "6rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.01562em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3.75rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.00833em",
                                                                                          "lineHeight": 1.2,
                                                                                        },
                                                                                        "h3": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h4": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "2.125rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00735em",
                                                                                          "lineHeight": 1.235,
                                                                                        },
                                                                                        "h5": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.5rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.334,
                                                                                        },
                                                                                        "h6": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.25rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.0075em",
                                                                                          "lineHeight": 1.6,
                                                                                        },
                                                                                        "htmlFontSize": 16,
                                                                                        "overline": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.08333em",
                                                                                          "lineHeight": 2.66,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "pxToRem": [Function],
                                                                                        "round": [Function],
                                                                                        "subtitle1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.75,
                                                                                        },
                                                                                        "subtitle2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.00714em",
                                                                                          "lineHeight": 1.57,
                                                                                        },
                                                                                      },
                                                                                      "zIndex": Object {
                                                                                        "appBar": 1100,
                                                                                        "drawer": 1200,
                                                                                        "mobileStepper": 1000,
                                                                                        "modal": 1300,
                                                                                        "snackbar": 1400,
                                                                                        "speedDial": 1050,
                                                                                        "tooltip": 1500,
                                                                                      },
                                                                                    },
                                                                                    "name": "MuiBackdrop",
                                                                                  },
                                                                                  "propTypes": Object {
                                                                                    "classes": [Function],
                                                                                    "innerRef": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "useStyles": [Function],
                                                                                }
                                                                              }
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "transitionDuration": Object {
                                                                                    "enter": 225,
                                                                                    "exit": 195,
                                                                                  },
                                                                                }
                                                                              }
                                                                              className="MuiDialog-root"
                                                                              closeAfterTransition={true}
                                                                              disableBackdropClick={false}
                                                                              disableEscapeKeyDown={false}
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                              role="dialog"
                                                                            />
                                                                          </ForwardRef(Dialog)>
                                                                        </WithStyles(ForwardRef(Dialog))>
                                                                      </ModalDialog>
                                                                    </WithStyles(ModalDialog)>
                                                                  </ModalWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                              <PickerWithState
                                                                KeyboardButtonProps={
                                                                  Object {
                                                                    "size": "small",
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                clearable={true}
                                                                color="secondary"
                                                                format="yyyy-MM-dd"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "investigations.start_date date filter to",
                                                                  }
                                                                }
                                                                invalidDateMessage="Invalid Date Format"
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Invalid date range"
                                                                onChange={[Function]}
                                                                openTo="date"
                                                                placeholder="To...     (yyyy-MM-dd)"
                                                                value={null}
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "month",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  KeyboardButtonProps={
                                                                    Object {
                                                                      "size": "small",
                                                                    }
                                                                  }
                                                                  clearable={true}
                                                                  color="secondary"
                                                                  format="yyyy-MM-dd"
                                                                  inputProps={
                                                                    Object {
                                                                      "aria-label": "investigations.start_date date filter to",
                                                                    }
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  placeholder="To...     (yyyy-MM-dd)"
                                                                >
                                                                  <ModalWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    KeyboardButtonProps={
                                                                      Object {
                                                                        "size": "small",
                                                                      }
                                                                    }
                                                                    cancelLabel="Cancel"
                                                                    clearLabel="Clear"
                                                                    clearable={true}
                                                                    color="secondary"
                                                                    format="yyyy-MM-dd"
                                                                    inputProps={
                                                                      Object {
                                                                        "aria-label": "investigations.start_date date filter to",
                                                                      }
                                                                    }
                                                                    okLabel="OK"
                                                                    onAccept={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                    placeholder="To...     (yyyy-MM-dd)"
                                                                    showTodayButton={false}
                                                                    todayLabel="Today"
                                                                  >
                                                                    <KeyboardDateInput
                                                                      KeyboardButtonProps={
                                                                        Object {
                                                                          "size": "small",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      format="yyyy-MM-dd"
                                                                      inputProps={
                                                                        Object {
                                                                          "aria-label": "investigations.start_date date filter to",
                                                                        }
                                                                      }
                                                                      inputValue=""
                                                                      keyboardIcon={<KeyboardIcon />}
                                                                      onChange={[Function]}
                                                                      openPicker={[Function]}
                                                                      placeholder="To...     (yyyy-MM-dd)"
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value=""
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                  size="small"
                                                                                >
                                                                                  <KeyboardIcon />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          error={false}
                                                                          helperText=""
                                                                          inputProps={
                                                                            Object {
                                                                              "aria-label": "investigations.start_date date filter to",
                                                                            }
                                                                          }
                                                                          onChange={[Function]}
                                                                          placeholder="To...     (yyyy-MM-dd)"
                                                                          value=""
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                    size="small"
                                                                                  >
                                                                                    <KeyboardIcon />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            color="secondary"
                                                                            error={false}
                                                                            helperText=""
                                                                            inputProps={
                                                                              Object {
                                                                                "aria-label": "investigations.start_date date filter to",
                                                                              }
                                                                            }
                                                                            onChange={[Function]}
                                                                            placeholder="To...     (yyyy-MM-dd)"
                                                                            value=""
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="secondary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="standard"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="secondary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="standard"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Input))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                          size="small"
                                                                                        >
                                                                                          <KeyboardIcon />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    inputProps={
                                                                                      Object {
                                                                                        "aria-label": "investigations.start_date date filter to",
                                                                                      }
                                                                                    }
                                                                                    multiline={false}
                                                                                    onChange={[Function]}
                                                                                    placeholder="To...     (yyyy-MM-dd)"
                                                                                    value=""
                                                                                  >
                                                                                    <ForwardRef(Input)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "formControl": "MuiInput-formControl",
                                                                                          "fullWidth": "MuiInput-fullWidth",
                                                                                          "input": "MuiInput-input",
                                                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                          "marginDense": "MuiInput-marginDense",
                                                                                          "multiline": "MuiInput-multiline",
                                                                                          "root": "MuiInput-root",
                                                                                          "underline": "MuiInput-underline",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                            size="small"
                                                                                          >
                                                                                            <KeyboardIcon />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      inputProps={
                                                                                        Object {
                                                                                          "aria-label": "investigations.start_date date filter to",
                                                                                        }
                                                                                      }
                                                                                      multiline={false}
                                                                                      onChange={[Function]}
                                                                                      placeholder="To...     (yyyy-MM-dd)"
                                                                                      value=""
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "formControl": "MuiInput-formControl",
                                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                                            "input": "MuiInput-input",
                                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                            "marginDense": "MuiInput-marginDense",
                                                                                            "multiline": "MuiInput-multiline",
                                                                                            "root": "MuiInput-root MuiInput-underline",
                                                                                            "underline": null,
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                              size="small"
                                                                                            >
                                                                                              <KeyboardIcon />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        inputComponent="input"
                                                                                        inputProps={
                                                                                          Object {
                                                                                            "aria-label": "investigations.start_date date filter to",
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="To...     (yyyy-MM-dd)"
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                                size="small"
                                                                                              >
                                                                                                <KeyboardIcon />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          inputComponent="input"
                                                                                          inputProps={
                                                                                            Object {
                                                                                              "aria-label": "investigations.start_date date filter to",
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onChange={[Function]}
                                                                                          placeholder="To...     (yyyy-MM-dd)"
                                                                                          type="text"
                                                                                          value=""
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              aria-label="investigations.start_date date filter to"
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              placeholder="To...     (yyyy-MM-dd)"
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                    size="small"
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                      size="small"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <KeyboardIcon>
                                                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                  <ForwardRef(SvgIcon)
                                                                                                                    classes={
                                                                                                                      Object {
                                                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                                        "root": "MuiSvgIcon-root",
                                                                                                                      }
                                                                                                                    }
                                                                                                                  >
                                                                                                                    <svg
                                                                                                                      aria-hidden={true}
                                                                                                                      className="MuiSvgIcon-root"
                                                                                                                      focusable="false"
                                                                                                                      viewBox="0 0 24 24"
                                                                                                                    >
                                                                                                                      <path
                                                                                                                        d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                                                      />
                                                                                                                      <path
                                                                                                                        d="M0 0h24v24H0z"
                                                                                                                        fill="none"
                                                                                                                      />
                                                                                                                    </svg>
                                                                                                                  </ForwardRef(SvgIcon)>
                                                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                                                              </KeyboardIcon>
                                                                                                            </span>
                                                                                                            <WithStyles(memo)
                                                                                                              center={true}
                                                                                                            >
                                                                                                              <ForwardRef(TouchRipple)
                                                                                                                center={true}
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                                  }
                                                                                                                }
                                                                                                              >
                                                                                                                <span
                                                                                                                  className="MuiTouchRipple-root"
                                                                                                                >
                                                                                                                  <TransitionGroup
                                                                                                                    childFactory={[Function]}
                                                                                                                    component={null}
                                                                                                                    exit={true}
                                                                                                                  />
                                                                                                                </span>
                                                                                                              </ForwardRef(TouchRipple)>
                                                                                                            </WithStyles(memo)>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(Input)>
                                                                                  </WithStyles(ForwardRef(Input))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ModalDialog)
                                                                      cancelLabel="Cancel"
                                                                      clearLabel="Clear"
                                                                      clearable={true}
                                                                      okLabel="OK"
                                                                      onAccept={[Function]}
                                                                      onClear={[Function]}
                                                                      onDismiss={[Function]}
                                                                      onSetToday={[Function]}
                                                                      open={false}
                                                                      showTodayButton={false}
                                                                      todayLabel="Today"
                                                                    >
                                                                      <ModalDialog
                                                                        cancelLabel="Cancel"
                                                                        classes={
                                                                          Object {
                                                                            "dialog": "MuiPickersModal-dialog",
                                                                            "dialogRoot": "MuiPickersModal-dialogRoot",
                                                                            "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                                            "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                                          }
                                                                        }
                                                                        clearLabel="Clear"
                                                                        clearable={true}
                                                                        okLabel="OK"
                                                                        onAccept={[Function]}
                                                                        onClear={[Function]}
                                                                        onDismiss={[Function]}
                                                                        onSetToday={[Function]}
                                                                        open={false}
                                                                        showTodayButton={false}
                                                                        todayLabel="Today"
                                                                      >
                                                                        <WithStyles(ForwardRef(Dialog))
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPickersModal-dialogRoot",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          role="dialog"
                                                                        >
                                                                          <ForwardRef(Dialog)
                                                                            classes={
                                                                              Object {
                                                                                "container": "MuiDialog-container",
                                                                                "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                                                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                                                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                                                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                                                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                                                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                                                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                                                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                                                                "root": "MuiDialog-root",
                                                                                "scrollBody": "MuiDialog-scrollBody",
                                                                                "scrollPaper": "MuiDialog-scrollPaper",
                                                                              }
                                                                            }
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            role="dialog"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "Naked": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "propTypes": Object {
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "classes": [Function],
                                                                                      "invisible": [Function],
                                                                                      "open": [Function],
                                                                                      "transitionDuration": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                                                                  "options": Object {
                                                                                    "defaultTheme": Object {
                                                                                      "breakpoints": Object {
                                                                                        "between": [Function],
                                                                                        "down": [Function],
                                                                                        "keys": Array [
                                                                                          "xs",
                                                                                          "sm",
                                                                                          "md",
                                                                                          "lg",
                                                                                          "xl",
                                                                                        ],
                                                                                        "only": [Function],
                                                                                        "up": [Function],
                                                                                        "values": Object {
                                                                                          "lg": 1280,
                                                                                          "md": 960,
                                                                                          "sm": 600,
                                                                                          "xl": 1920,
                                                                                          "xs": 0,
                                                                                        },
                                                                                        "width": [Function],
                                                                                      },
                                                                                      "direction": "ltr",
                                                                                      "mixins": Object {
                                                                                        "gutters": [Function],
                                                                                        "toolbar": Object {
                                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                            "minHeight": 48,
                                                                                          },
                                                                                          "@media (min-width:600px)": Object {
                                                                                            "minHeight": 64,
                                                                                          },
                                                                                          "minHeight": 56,
                                                                                        },
                                                                                      },
                                                                                      "overrides": Object {},
                                                                                      "palette": Object {
                                                                                        "action": Object {
                                                                                          "activatedOpacity": 0.12,
                                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                          "disabledOpacity": 0.38,
                                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                                          "focusOpacity": 0.12,
                                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                                          "hoverOpacity": 0.04,
                                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                                          "selectedOpacity": 0.08,
                                                                                        },
                                                                                        "augmentColor": [Function],
                                                                                        "background": Object {
                                                                                          "default": "#fafafa",
                                                                                          "paper": "#fff",
                                                                                        },
                                                                                        "common": Object {
                                                                                          "black": "#000",
                                                                                          "white": "#fff",
                                                                                        },
                                                                                        "contrastThreshold": 3,
                                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                                        "error": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#d32f2f",
                                                                                          "light": "#e57373",
                                                                                          "main": "#f44336",
                                                                                        },
                                                                                        "getContrastText": [Function],
                                                                                        "grey": Object {
                                                                                          "100": "#f5f5f5",
                                                                                          "200": "#eeeeee",
                                                                                          "300": "#e0e0e0",
                                                                                          "400": "#bdbdbd",
                                                                                          "50": "#fafafa",
                                                                                          "500": "#9e9e9e",
                                                                                          "600": "#757575",
                                                                                          "700": "#616161",
                                                                                          "800": "#424242",
                                                                                          "900": "#212121",
                                                                                          "A100": "#d5d5d5",
                                                                                          "A200": "#aaaaaa",
                                                                                          "A400": "#303030",
                                                                                          "A700": "#616161",
                                                                                        },
                                                                                        "info": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#1976d2",
                                                                                          "light": "#64b5f6",
                                                                                          "main": "#2196f3",
                                                                                        },
                                                                                        "primary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#303f9f",
                                                                                          "light": "#7986cb",
                                                                                          "main": "#3f51b5",
                                                                                        },
                                                                                        "secondary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#c51162",
                                                                                          "light": "#ff4081",
                                                                                          "main": "#f50057",
                                                                                        },
                                                                                        "success": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#388e3c",
                                                                                          "light": "#81c784",
                                                                                          "main": "#4caf50",
                                                                                        },
                                                                                        "text": Object {
                                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                        },
                                                                                        "tonalOffset": 0.2,
                                                                                        "type": "light",
                                                                                        "warning": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#f57c00",
                                                                                          "light": "#ffb74d",
                                                                                          "main": "#ff9800",
                                                                                        },
                                                                                      },
                                                                                      "props": Object {},
                                                                                      "shadows": Array [
                                                                                        "none",
                                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                      ],
                                                                                      "shape": Object {
                                                                                        "borderRadius": 4,
                                                                                      },
                                                                                      "spacing": [Function],
                                                                                      "transitions": Object {
                                                                                        "create": [Function],
                                                                                        "duration": Object {
                                                                                          "complex": 375,
                                                                                          "enteringScreen": 225,
                                                                                          "leavingScreen": 195,
                                                                                          "short": 250,
                                                                                          "shorter": 200,
                                                                                          "shortest": 150,
                                                                                          "standard": 300,
                                                                                        },
                                                                                        "easing": Object {
                                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                        },
                                                                                        "getAutoHeightDuration": [Function],
                                                                                      },
                                                                                      "typography": Object {
                                                                                        "body1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.5,
                                                                                        },
                                                                                        "body2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.01071em",
                                                                                          "lineHeight": 1.43,
                                                                                        },
                                                                                        "button": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.02857em",
                                                                                          "lineHeight": 1.75,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "caption": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.03333em",
                                                                                          "lineHeight": 1.66,
                                                                                        },
                                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                        "fontSize": 14,
                                                                                        "fontWeightBold": 700,
                                                                                        "fontWeightLight": 300,
                                                                                        "fontWeightMedium": 500,
                                                                                        "fontWeightRegular": 400,
                                                                                        "h1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "6rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.01562em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3.75rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.00833em",
                                                                                          "lineHeight": 1.2,
                                                                                        },
                                                                                        "h3": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h4": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "2.125rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00735em",
                                                                                          "lineHeight": 1.235,
                                                                                        },
                                                                                        "h5": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.5rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.334,
                                                                                        },
                                                                                        "h6": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.25rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.0075em",
                                                                                          "lineHeight": 1.6,
                                                                                        },
                                                                                        "htmlFontSize": 16,
                                                                                        "overline": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.08333em",
                                                                                          "lineHeight": 2.66,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "pxToRem": [Function],
                                                                                        "round": [Function],
                                                                                        "subtitle1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.75,
                                                                                        },
                                                                                        "subtitle2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.00714em",
                                                                                          "lineHeight": 1.57,
                                                                                        },
                                                                                      },
                                                                                      "zIndex": Object {
                                                                                        "appBar": 1100,
                                                                                        "drawer": 1200,
                                                                                        "mobileStepper": 1000,
                                                                                        "modal": 1300,
                                                                                        "snackbar": 1400,
                                                                                        "speedDial": 1050,
                                                                                        "tooltip": 1500,
                                                                                      },
                                                                                    },
                                                                                    "name": "MuiBackdrop",
                                                                                  },
                                                                                  "propTypes": Object {
                                                                                    "classes": [Function],
                                                                                    "innerRef": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "useStyles": [Function],
                                                                                }
                                                                              }
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "transitionDuration": Object {
                                                                                    "enter": 225,
                                                                                    "exit": 195,
                                                                                  },
                                                                                }
                                                                              }
                                                                              className="MuiDialog-root"
                                                                              closeAfterTransition={true}
                                                                              disableBackdropClick={false}
                                                                              disableEscapeKeyDown={false}
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                              role="dialog"
                                                                            />
                                                                          </ForwardRef(Dialog)>
                                                                        </WithStyles(ForwardRef(Dialog))>
                                                                      </ModalDialog>
                                                                    </WithStyles(ModalDialog)>
                                                                  </ModalWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                            </MuiPickersUtilsProvider>
                                                          </form>
                                                        </DateColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                            <div
                                              className="ReactVirtualized__Table__headerColumn VirtualizedTable-headerFlexContainer-11"
                                              key="Header-Col9"
                                              role="columnheader"
                                              style={
                                                Object {
                                                  "WebkitFlex": "1 1 128px",
                                                  "flex": "1 1 128px",
                                                  "minWidth": 70,
                                                  "msFlex": "1 1 128px",
                                                }
                                              }
                                            >
                                              <DataHeader
                                                className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                dataKey="ENDDATE"
                                                filterComponent={
                                                  <DateColumnFilter
                                                    label="investigations.end_date"
                                                    onChange={[Function]}
                                                  />
                                                }
                                                label="investigations.end_date"
                                                onSort={[Function]}
                                                resizeColumn={[Function]}
                                                sort={Object {}}
                                              >
                                                <WithStyles(ForwardRef(TableCell))
                                                  className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                  component="div"
                                                  size="small"
                                                  variant="head"
                                                >
                                                  <ForwardRef(TableCell)
                                                    className="VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTableCell-alignCenter",
                                                        "alignJustify": "MuiTableCell-alignJustify",
                                                        "alignLeft": "MuiTableCell-alignLeft",
                                                        "alignRight": "MuiTableCell-alignRight",
                                                        "body": "MuiTableCell-body",
                                                        "footer": "MuiTableCell-footer",
                                                        "head": "MuiTableCell-head",
                                                        "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                        "paddingNone": "MuiTableCell-paddingNone",
                                                        "root": "MuiTableCell-root",
                                                        "sizeSmall": "MuiTableCell-sizeSmall",
                                                        "stickyHeader": "MuiTableCell-stickyHeader",
                                                      }
                                                    }
                                                    component="div"
                                                    size="small"
                                                    variant="head"
                                                  >
                                                    <div
                                                      aria-sort={null}
                                                      className="MuiTableCell-root MuiTableCell-head VirtualizedTable-headerTableCell-15 VirtualizedTable-headerFlexContainer-11 MuiTableCell-sizeSmall"
                                                      role="cell"
                                                    >
                                                      <div
                                                        style={
                                                          Object {
                                                            "flex": 1,
                                                            "overflow": "hidden",
                                                          }
                                                        }
                                                      >
                                                        <Styled(MuiBox)
                                                          display="flex"
                                                          flexWrap="wrap"
                                                        >
                                                          <div
                                                            className="MuiBox-root MuiBox-root-41"
                                                          >
                                                            <Styled(MuiBox)
                                                              marginRight={1}
                                                            >
                                                              <div
                                                                className="MuiBox-root MuiBox-root-42"
                                                              />
                                                            </Styled(MuiBox)>
                                                            <Styled(MuiBox)>
                                                              <div
                                                                className="MuiBox-root MuiBox-root-43"
                                                              >
                                                                <WithStyles(ForwardRef(TableSortLabel))
                                                                  active={false}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(TableSortLabel)
                                                                    active={false}
                                                                    classes={
                                                                      Object {
                                                                        "active": "MuiTableSortLabel-active",
                                                                        "icon": "MuiTableSortLabel-icon",
                                                                        "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                        "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                        "root": "MuiTableSortLabel-root",
                                                                      }
                                                                    }
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(ButtonBase))
                                                                      className="MuiTableSortLabel-root"
                                                                      component="span"
                                                                      disableRipple={true}
                                                                      onClick={[Function]}
                                                                    >
                                                                      <ForwardRef(ButtonBase)
                                                                        className="MuiTableSortLabel-root"
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "focusVisible": "Mui-focusVisible",
                                                                            "root": "MuiButtonBase-root",
                                                                          }
                                                                        }
                                                                        component="span"
                                                                        disableRipple={true}
                                                                        onClick={[Function]}
                                                                      >
                                                                        <span
                                                                          aria-disabled={false}
                                                                          className="MuiButtonBase-root MuiTableSortLabel-root"
                                                                          onBlur={[Function]}
                                                                          onClick={[Function]}
                                                                          onDragLeave={[Function]}
                                                                          onFocus={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          onKeyUp={[Function]}
                                                                          onMouseDown={[Function]}
                                                                          onMouseLeave={[Function]}
                                                                          onMouseUp={[Function]}
                                                                          onTouchEnd={[Function]}
                                                                          onTouchMove={[Function]}
                                                                          onTouchStart={[Function]}
                                                                          role="button"
                                                                          tabIndex={0}
                                                                        >
                                                                          investigations.end_date
                                                                          <ForwardRef(ArrowDownwardIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                          >
                                                                            <WithStyles(ForwardRef(SvgIcon))
                                                                              className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            >
                                                                              <ForwardRef(SvgIcon)
                                                                                className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                classes={
                                                                                  Object {
                                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                    "root": "MuiSvgIcon-root",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                                  focusable="false"
                                                                                  viewBox="0 0 24 24"
                                                                                >
                                                                                  <path
                                                                                    d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                                  />
                                                                                </svg>
                                                                              </ForwardRef(SvgIcon)>
                                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                                          </ForwardRef(ArrowDownwardIcon)>
                                                                        </span>
                                                                      </ForwardRef(ButtonBase)>
                                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                                  </ForwardRef(TableSortLabel)>
                                                                </WithStyles(ForwardRef(TableSortLabel))>
                                                              </div>
                                                            </Styled(MuiBox)>
                                                          </div>
                                                        </Styled(MuiBox)>
                                                        <DateColumnFilter
                                                          label="investigations.end_date"
                                                          onChange={[Function]}
                                                        >
                                                          <form>
                                                            <MuiPickersUtilsProvider
                                                              utils={[Function]}
                                                            >
                                                              <PickerWithState
                                                                KeyboardButtonProps={
                                                                  Object {
                                                                    "size": "small",
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                clearable={true}
                                                                color="secondary"
                                                                format="yyyy-MM-dd"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "investigations.end_date date filter from",
                                                                  }
                                                                }
                                                                invalidDateMessage="Invalid Date Format"
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Invalid date range"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Date should not be before minimal date"
                                                                onChange={[Function]}
                                                                openTo="date"
                                                                placeholder="From... (yyyy-MM-dd)"
                                                                value={null}
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "month",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  KeyboardButtonProps={
                                                                    Object {
                                                                      "size": "small",
                                                                    }
                                                                  }
                                                                  clearable={true}
                                                                  color="secondary"
                                                                  format="yyyy-MM-dd"
                                                                  inputProps={
                                                                    Object {
                                                                      "aria-label": "investigations.end_date date filter from",
                                                                    }
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  placeholder="From... (yyyy-MM-dd)"
                                                                >
                                                                  <ModalWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    KeyboardButtonProps={
                                                                      Object {
                                                                        "size": "small",
                                                                      }
                                                                    }
                                                                    cancelLabel="Cancel"
                                                                    clearLabel="Clear"
                                                                    clearable={true}
                                                                    color="secondary"
                                                                    format="yyyy-MM-dd"
                                                                    inputProps={
                                                                      Object {
                                                                        "aria-label": "investigations.end_date date filter from",
                                                                      }
                                                                    }
                                                                    okLabel="OK"
                                                                    onAccept={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                    placeholder="From... (yyyy-MM-dd)"
                                                                    showTodayButton={false}
                                                                    todayLabel="Today"
                                                                  >
                                                                    <KeyboardDateInput
                                                                      KeyboardButtonProps={
                                                                        Object {
                                                                          "size": "small",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      format="yyyy-MM-dd"
                                                                      inputProps={
                                                                        Object {
                                                                          "aria-label": "investigations.end_date date filter from",
                                                                        }
                                                                      }
                                                                      inputValue=""
                                                                      keyboardIcon={<KeyboardIcon />}
                                                                      onChange={[Function]}
                                                                      openPicker={[Function]}
                                                                      placeholder="From... (yyyy-MM-dd)"
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value=""
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                  size="small"
                                                                                >
                                                                                  <KeyboardIcon />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          error={false}
                                                                          helperText=""
                                                                          inputProps={
                                                                            Object {
                                                                              "aria-label": "investigations.end_date date filter from",
                                                                            }
                                                                          }
                                                                          onChange={[Function]}
                                                                          placeholder="From... (yyyy-MM-dd)"
                                                                          value=""
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                    size="small"
                                                                                  >
                                                                                    <KeyboardIcon />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            color="secondary"
                                                                            error={false}
                                                                            helperText=""
                                                                            inputProps={
                                                                              Object {
                                                                                "aria-label": "investigations.end_date date filter from",
                                                                              }
                                                                            }
                                                                            onChange={[Function]}
                                                                            placeholder="From... (yyyy-MM-dd)"
                                                                            value=""
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="secondary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="standard"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="secondary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="standard"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Input))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                          size="small"
                                                                                        >
                                                                                          <KeyboardIcon />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    inputProps={
                                                                                      Object {
                                                                                        "aria-label": "investigations.end_date date filter from",
                                                                                      }
                                                                                    }
                                                                                    multiline={false}
                                                                                    onChange={[Function]}
                                                                                    placeholder="From... (yyyy-MM-dd)"
                                                                                    value=""
                                                                                  >
                                                                                    <ForwardRef(Input)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "formControl": "MuiInput-formControl",
                                                                                          "fullWidth": "MuiInput-fullWidth",
                                                                                          "input": "MuiInput-input",
                                                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                          "marginDense": "MuiInput-marginDense",
                                                                                          "multiline": "MuiInput-multiline",
                                                                                          "root": "MuiInput-root",
                                                                                          "underline": "MuiInput-underline",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                            size="small"
                                                                                          >
                                                                                            <KeyboardIcon />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      inputProps={
                                                                                        Object {
                                                                                          "aria-label": "investigations.end_date date filter from",
                                                                                        }
                                                                                      }
                                                                                      multiline={false}
                                                                                      onChange={[Function]}
                                                                                      placeholder="From... (yyyy-MM-dd)"
                                                                                      value=""
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "formControl": "MuiInput-formControl",
                                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                                            "input": "MuiInput-input",
                                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                            "marginDense": "MuiInput-marginDense",
                                                                                            "multiline": "MuiInput-multiline",
                                                                                            "root": "MuiInput-root MuiInput-underline",
                                                                                            "underline": null,
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                              size="small"
                                                                                            >
                                                                                              <KeyboardIcon />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        inputComponent="input"
                                                                                        inputProps={
                                                                                          Object {
                                                                                            "aria-label": "investigations.end_date date filter from",
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="From... (yyyy-MM-dd)"
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                                size="small"
                                                                                              >
                                                                                                <KeyboardIcon />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          inputComponent="input"
                                                                                          inputProps={
                                                                                            Object {
                                                                                              "aria-label": "investigations.end_date date filter from",
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onChange={[Function]}
                                                                                          placeholder="From... (yyyy-MM-dd)"
                                                                                          type="text"
                                                                                          value=""
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              aria-label="investigations.end_date date filter from"
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              placeholder="From... (yyyy-MM-dd)"
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                    size="small"
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                      size="small"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <KeyboardIcon>
                                                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                  <ForwardRef(SvgIcon)
                                                                                                                    classes={
                                                                                                                      Object {
                                                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                                        "root": "MuiSvgIcon-root",
                                                                                                                      }
                                                                                                                    }
                                                                                                                  >
                                                                                                                    <svg
                                                                                                                      aria-hidden={true}
                                                                                                                      className="MuiSvgIcon-root"
                                                                                                                      focusable="false"
                                                                                                                      viewBox="0 0 24 24"
                                                                                                                    >
                                                                                                                      <path
                                                                                                                        d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                                                      />
                                                                                                                      <path
                                                                                                                        d="M0 0h24v24H0z"
                                                                                                                        fill="none"
                                                                                                                      />
                                                                                                                    </svg>
                                                                                                                  </ForwardRef(SvgIcon)>
                                                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                                                              </KeyboardIcon>
                                                                                                            </span>
                                                                                                            <WithStyles(memo)
                                                                                                              center={true}
                                                                                                            >
                                                                                                              <ForwardRef(TouchRipple)
                                                                                                                center={true}
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                                  }
                                                                                                                }
                                                                                                              >
                                                                                                                <span
                                                                                                                  className="MuiTouchRipple-root"
                                                                                                                >
                                                                                                                  <TransitionGroup
                                                                                                                    childFactory={[Function]}
                                                                                                                    component={null}
                                                                                                                    exit={true}
                                                                                                                  />
                                                                                                                </span>
                                                                                                              </ForwardRef(TouchRipple)>
                                                                                                            </WithStyles(memo)>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(Input)>
                                                                                  </WithStyles(ForwardRef(Input))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ModalDialog)
                                                                      cancelLabel="Cancel"
                                                                      clearLabel="Clear"
                                                                      clearable={true}
                                                                      okLabel="OK"
                                                                      onAccept={[Function]}
                                                                      onClear={[Function]}
                                                                      onDismiss={[Function]}
                                                                      onSetToday={[Function]}
                                                                      open={false}
                                                                      showTodayButton={false}
                                                                      todayLabel="Today"
                                                                    >
                                                                      <ModalDialog
                                                                        cancelLabel="Cancel"
                                                                        classes={
                                                                          Object {
                                                                            "dialog": "MuiPickersModal-dialog",
                                                                            "dialogRoot": "MuiPickersModal-dialogRoot",
                                                                            "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                                            "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                                          }
                                                                        }
                                                                        clearLabel="Clear"
                                                                        clearable={true}
                                                                        okLabel="OK"
                                                                        onAccept={[Function]}
                                                                        onClear={[Function]}
                                                                        onDismiss={[Function]}
                                                                        onSetToday={[Function]}
                                                                        open={false}
                                                                        showTodayButton={false}
                                                                        todayLabel="Today"
                                                                      >
                                                                        <WithStyles(ForwardRef(Dialog))
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPickersModal-dialogRoot",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          role="dialog"
                                                                        >
                                                                          <ForwardRef(Dialog)
                                                                            classes={
                                                                              Object {
                                                                                "container": "MuiDialog-container",
                                                                                "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                                                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                                                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                                                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                                                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                                                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                                                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                                                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                                                                "root": "MuiDialog-root",
                                                                                "scrollBody": "MuiDialog-scrollBody",
                                                                                "scrollPaper": "MuiDialog-scrollPaper",
                                                                              }
                                                                            }
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            role="dialog"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "Naked": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "propTypes": Object {
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "classes": [Function],
                                                                                      "invisible": [Function],
                                                                                      "open": [Function],
                                                                                      "transitionDuration": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                                                                  "options": Object {
                                                                                    "defaultTheme": Object {
                                                                                      "breakpoints": Object {
                                                                                        "between": [Function],
                                                                                        "down": [Function],
                                                                                        "keys": Array [
                                                                                          "xs",
                                                                                          "sm",
                                                                                          "md",
                                                                                          "lg",
                                                                                          "xl",
                                                                                        ],
                                                                                        "only": [Function],
                                                                                        "up": [Function],
                                                                                        "values": Object {
                                                                                          "lg": 1280,
                                                                                          "md": 960,
                                                                                          "sm": 600,
                                                                                          "xl": 1920,
                                                                                          "xs": 0,
                                                                                        },
                                                                                        "width": [Function],
                                                                                      },
                                                                                      "direction": "ltr",
                                                                                      "mixins": Object {
                                                                                        "gutters": [Function],
                                                                                        "toolbar": Object {
                                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                            "minHeight": 48,
                                                                                          },
                                                                                          "@media (min-width:600px)": Object {
                                                                                            "minHeight": 64,
                                                                                          },
                                                                                          "minHeight": 56,
                                                                                        },
                                                                                      },
                                                                                      "overrides": Object {},
                                                                                      "palette": Object {
                                                                                        "action": Object {
                                                                                          "activatedOpacity": 0.12,
                                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                          "disabledOpacity": 0.38,
                                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                                          "focusOpacity": 0.12,
                                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                                          "hoverOpacity": 0.04,
                                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                                          "selectedOpacity": 0.08,
                                                                                        },
                                                                                        "augmentColor": [Function],
                                                                                        "background": Object {
                                                                                          "default": "#fafafa",
                                                                                          "paper": "#fff",
                                                                                        },
                                                                                        "common": Object {
                                                                                          "black": "#000",
                                                                                          "white": "#fff",
                                                                                        },
                                                                                        "contrastThreshold": 3,
                                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                                        "error": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#d32f2f",
                                                                                          "light": "#e57373",
                                                                                          "main": "#f44336",
                                                                                        },
                                                                                        "getContrastText": [Function],
                                                                                        "grey": Object {
                                                                                          "100": "#f5f5f5",
                                                                                          "200": "#eeeeee",
                                                                                          "300": "#e0e0e0",
                                                                                          "400": "#bdbdbd",
                                                                                          "50": "#fafafa",
                                                                                          "500": "#9e9e9e",
                                                                                          "600": "#757575",
                                                                                          "700": "#616161",
                                                                                          "800": "#424242",
                                                                                          "900": "#212121",
                                                                                          "A100": "#d5d5d5",
                                                                                          "A200": "#aaaaaa",
                                                                                          "A400": "#303030",
                                                                                          "A700": "#616161",
                                                                                        },
                                                                                        "info": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#1976d2",
                                                                                          "light": "#64b5f6",
                                                                                          "main": "#2196f3",
                                                                                        },
                                                                                        "primary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#303f9f",
                                                                                          "light": "#7986cb",
                                                                                          "main": "#3f51b5",
                                                                                        },
                                                                                        "secondary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#c51162",
                                                                                          "light": "#ff4081",
                                                                                          "main": "#f50057",
                                                                                        },
                                                                                        "success": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#388e3c",
                                                                                          "light": "#81c784",
                                                                                          "main": "#4caf50",
                                                                                        },
                                                                                        "text": Object {
                                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                        },
                                                                                        "tonalOffset": 0.2,
                                                                                        "type": "light",
                                                                                        "warning": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#f57c00",
                                                                                          "light": "#ffb74d",
                                                                                          "main": "#ff9800",
                                                                                        },
                                                                                      },
                                                                                      "props": Object {},
                                                                                      "shadows": Array [
                                                                                        "none",
                                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                      ],
                                                                                      "shape": Object {
                                                                                        "borderRadius": 4,
                                                                                      },
                                                                                      "spacing": [Function],
                                                                                      "transitions": Object {
                                                                                        "create": [Function],
                                                                                        "duration": Object {
                                                                                          "complex": 375,
                                                                                          "enteringScreen": 225,
                                                                                          "leavingScreen": 195,
                                                                                          "short": 250,
                                                                                          "shorter": 200,
                                                                                          "shortest": 150,
                                                                                          "standard": 300,
                                                                                        },
                                                                                        "easing": Object {
                                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                        },
                                                                                        "getAutoHeightDuration": [Function],
                                                                                      },
                                                                                      "typography": Object {
                                                                                        "body1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.5,
                                                                                        },
                                                                                        "body2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.01071em",
                                                                                          "lineHeight": 1.43,
                                                                                        },
                                                                                        "button": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.02857em",
                                                                                          "lineHeight": 1.75,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "caption": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.03333em",
                                                                                          "lineHeight": 1.66,
                                                                                        },
                                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                        "fontSize": 14,
                                                                                        "fontWeightBold": 700,
                                                                                        "fontWeightLight": 300,
                                                                                        "fontWeightMedium": 500,
                                                                                        "fontWeightRegular": 400,
                                                                                        "h1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "6rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.01562em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3.75rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.00833em",
                                                                                          "lineHeight": 1.2,
                                                                                        },
                                                                                        "h3": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h4": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "2.125rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00735em",
                                                                                          "lineHeight": 1.235,
                                                                                        },
                                                                                        "h5": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.5rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.334,
                                                                                        },
                                                                                        "h6": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.25rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.0075em",
                                                                                          "lineHeight": 1.6,
                                                                                        },
                                                                                        "htmlFontSize": 16,
                                                                                        "overline": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.08333em",
                                                                                          "lineHeight": 2.66,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "pxToRem": [Function],
                                                                                        "round": [Function],
                                                                                        "subtitle1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.75,
                                                                                        },
                                                                                        "subtitle2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.00714em",
                                                                                          "lineHeight": 1.57,
                                                                                        },
                                                                                      },
                                                                                      "zIndex": Object {
                                                                                        "appBar": 1100,
                                                                                        "drawer": 1200,
                                                                                        "mobileStepper": 1000,
                                                                                        "modal": 1300,
                                                                                        "snackbar": 1400,
                                                                                        "speedDial": 1050,
                                                                                        "tooltip": 1500,
                                                                                      },
                                                                                    },
                                                                                    "name": "MuiBackdrop",
                                                                                  },
                                                                                  "propTypes": Object {
                                                                                    "classes": [Function],
                                                                                    "innerRef": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "useStyles": [Function],
                                                                                }
                                                                              }
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "transitionDuration": Object {
                                                                                    "enter": 225,
                                                                                    "exit": 195,
                                                                                  },
                                                                                }
                                                                              }
                                                                              className="MuiDialog-root"
                                                                              closeAfterTransition={true}
                                                                              disableBackdropClick={false}
                                                                              disableEscapeKeyDown={false}
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                              role="dialog"
                                                                            />
                                                                          </ForwardRef(Dialog)>
                                                                        </WithStyles(ForwardRef(Dialog))>
                                                                      </ModalDialog>
                                                                    </WithStyles(ModalDialog)>
                                                                  </ModalWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                              <PickerWithState
                                                                KeyboardButtonProps={
                                                                  Object {
                                                                    "size": "small",
                                                                  }
                                                                }
                                                                allowKeyboardControl={true}
                                                                clearable={true}
                                                                color="secondary"
                                                                format="yyyy-MM-dd"
                                                                inputProps={
                                                                  Object {
                                                                    "aria-label": "investigations.end_date date filter to",
                                                                  }
                                                                }
                                                                invalidDateMessage="Invalid Date Format"
                                                                maxDate={2100-01-01T00:00:00.000Z}
                                                                maxDateMessage="Date should not be after maximal date"
                                                                minDate={1900-01-01T00:00:00.000Z}
                                                                minDateMessage="Invalid date range"
                                                                onChange={[Function]}
                                                                openTo="date"
                                                                placeholder="To...     (yyyy-MM-dd)"
                                                                value={null}
                                                                views={
                                                                  Array [
                                                                    "year",
                                                                    "month",
                                                                    "date",
                                                                  ]
                                                                }
                                                              >
                                                                <Wrapper
                                                                  DateInputProps={
                                                                    Object {
                                                                      "format": "yyyy-MM-dd",
                                                                      "inputValue": "",
                                                                      "onChange": [Function],
                                                                      "openPicker": [Function],
                                                                      "validationError": "",
                                                                    }
                                                                  }
                                                                  InputComponent={[Function]}
                                                                  KeyboardButtonProps={
                                                                    Object {
                                                                      "size": "small",
                                                                    }
                                                                  }
                                                                  clearable={true}
                                                                  color="secondary"
                                                                  format="yyyy-MM-dd"
                                                                  inputProps={
                                                                    Object {
                                                                      "aria-label": "investigations.end_date date filter to",
                                                                    }
                                                                  }
                                                                  onAccept={[Function]}
                                                                  onClear={[Function]}
                                                                  onDismiss={[Function]}
                                                                  onSetToday={[Function]}
                                                                  open={false}
                                                                  placeholder="To...     (yyyy-MM-dd)"
                                                                >
                                                                  <ModalWrapper
                                                                    DateInputProps={
                                                                      Object {
                                                                        "format": "yyyy-MM-dd",
                                                                        "inputValue": "",
                                                                        "onChange": [Function],
                                                                        "openPicker": [Function],
                                                                        "validationError": "",
                                                                      }
                                                                    }
                                                                    InputComponent={[Function]}
                                                                    KeyboardButtonProps={
                                                                      Object {
                                                                        "size": "small",
                                                                      }
                                                                    }
                                                                    cancelLabel="Cancel"
                                                                    clearLabel="Clear"
                                                                    clearable={true}
                                                                    color="secondary"
                                                                    format="yyyy-MM-dd"
                                                                    inputProps={
                                                                      Object {
                                                                        "aria-label": "investigations.end_date date filter to",
                                                                      }
                                                                    }
                                                                    okLabel="OK"
                                                                    onAccept={[Function]}
                                                                    onClear={[Function]}
                                                                    onDismiss={[Function]}
                                                                    onSetToday={[Function]}
                                                                    open={false}
                                                                    placeholder="To...     (yyyy-MM-dd)"
                                                                    showTodayButton={false}
                                                                    todayLabel="Today"
                                                                  >
                                                                    <KeyboardDateInput
                                                                      KeyboardButtonProps={
                                                                        Object {
                                                                          "size": "small",
                                                                        }
                                                                      }
                                                                      color="secondary"
                                                                      format="yyyy-MM-dd"
                                                                      inputProps={
                                                                        Object {
                                                                          "aria-label": "investigations.end_date date filter to",
                                                                        }
                                                                      }
                                                                      inputValue=""
                                                                      keyboardIcon={<KeyboardIcon />}
                                                                      onChange={[Function]}
                                                                      openPicker={[Function]}
                                                                      placeholder="To...     (yyyy-MM-dd)"
                                                                      validationError=""
                                                                    >
                                                                      <Rifm
                                                                        format={[Function]}
                                                                        key="____-__-__"
                                                                        onChange={[Function]}
                                                                        refuse={/\\[\\^\\\\d\\]\\+/gi}
                                                                        value=""
                                                                      >
                                                                        <WithStyles(ForwardRef(TextField))
                                                                          InputProps={
                                                                            Object {
                                                                              "endAdornment": <ForwardRef(WithStyles)
                                                                                position="end"
                                                                              >
                                                                                <ForwardRef(WithStyles)
                                                                                  onClick={[Function]}
                                                                                  size="small"
                                                                                >
                                                                                  <KeyboardIcon />
                                                                                </ForwardRef(WithStyles)>
                                                                              </ForwardRef(WithStyles)>,
                                                                            }
                                                                          }
                                                                          color="secondary"
                                                                          error={false}
                                                                          helperText=""
                                                                          inputProps={
                                                                            Object {
                                                                              "aria-label": "investigations.end_date date filter to",
                                                                            }
                                                                          }
                                                                          onChange={[Function]}
                                                                          placeholder="To...     (yyyy-MM-dd)"
                                                                          value=""
                                                                        >
                                                                          <ForwardRef(TextField)
                                                                            InputProps={
                                                                              Object {
                                                                                "endAdornment": <ForwardRef(WithStyles)
                                                                                  position="end"
                                                                                >
                                                                                  <ForwardRef(WithStyles)
                                                                                    onClick={[Function]}
                                                                                    size="small"
                                                                                  >
                                                                                    <KeyboardIcon />
                                                                                  </ForwardRef(WithStyles)>
                                                                                </ForwardRef(WithStyles)>,
                                                                              }
                                                                            }
                                                                            classes={
                                                                              Object {
                                                                                "root": "MuiTextField-root",
                                                                              }
                                                                            }
                                                                            color="secondary"
                                                                            error={false}
                                                                            helperText=""
                                                                            inputProps={
                                                                              Object {
                                                                                "aria-label": "investigations.end_date date filter to",
                                                                              }
                                                                            }
                                                                            onChange={[Function]}
                                                                            placeholder="To...     (yyyy-MM-dd)"
                                                                            value=""
                                                                          >
                                                                            <WithStyles(ForwardRef(FormControl))
                                                                              className="MuiTextField-root"
                                                                              color="secondary"
                                                                              disabled={false}
                                                                              error={false}
                                                                              fullWidth={false}
                                                                              required={false}
                                                                              variant="standard"
                                                                            >
                                                                              <ForwardRef(FormControl)
                                                                                className="MuiTextField-root"
                                                                                classes={
                                                                                  Object {
                                                                                    "fullWidth": "MuiFormControl-fullWidth",
                                                                                    "marginDense": "MuiFormControl-marginDense",
                                                                                    "marginNormal": "MuiFormControl-marginNormal",
                                                                                    "root": "MuiFormControl-root",
                                                                                  }
                                                                                }
                                                                                color="secondary"
                                                                                disabled={false}
                                                                                error={false}
                                                                                fullWidth={false}
                                                                                required={false}
                                                                                variant="standard"
                                                                              >
                                                                                <div
                                                                                  className="MuiFormControl-root MuiTextField-root"
                                                                                >
                                                                                  <WithStyles(ForwardRef(Input))
                                                                                    autoFocus={false}
                                                                                    endAdornment={
                                                                                      <ForwardRef(WithStyles)
                                                                                        position="end"
                                                                                      >
                                                                                        <ForwardRef(WithStyles)
                                                                                          onClick={[Function]}
                                                                                          size="small"
                                                                                        >
                                                                                          <KeyboardIcon />
                                                                                        </ForwardRef(WithStyles)>
                                                                                      </ForwardRef(WithStyles)>
                                                                                    }
                                                                                    fullWidth={false}
                                                                                    inputProps={
                                                                                      Object {
                                                                                        "aria-label": "investigations.end_date date filter to",
                                                                                      }
                                                                                    }
                                                                                    multiline={false}
                                                                                    onChange={[Function]}
                                                                                    placeholder="To...     (yyyy-MM-dd)"
                                                                                    value=""
                                                                                  >
                                                                                    <ForwardRef(Input)
                                                                                      autoFocus={false}
                                                                                      classes={
                                                                                        Object {
                                                                                          "colorSecondary": "MuiInput-colorSecondary",
                                                                                          "disabled": "Mui-disabled",
                                                                                          "error": "Mui-error",
                                                                                          "focused": "Mui-focused",
                                                                                          "formControl": "MuiInput-formControl",
                                                                                          "fullWidth": "MuiInput-fullWidth",
                                                                                          "input": "MuiInput-input",
                                                                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                          "inputMultiline": "MuiInput-inputMultiline",
                                                                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                          "marginDense": "MuiInput-marginDense",
                                                                                          "multiline": "MuiInput-multiline",
                                                                                          "root": "MuiInput-root",
                                                                                          "underline": "MuiInput-underline",
                                                                                        }
                                                                                      }
                                                                                      endAdornment={
                                                                                        <ForwardRef(WithStyles)
                                                                                          position="end"
                                                                                        >
                                                                                          <ForwardRef(WithStyles)
                                                                                            onClick={[Function]}
                                                                                            size="small"
                                                                                          >
                                                                                            <KeyboardIcon />
                                                                                          </ForwardRef(WithStyles)>
                                                                                        </ForwardRef(WithStyles)>
                                                                                      }
                                                                                      fullWidth={false}
                                                                                      inputProps={
                                                                                        Object {
                                                                                          "aria-label": "investigations.end_date date filter to",
                                                                                        }
                                                                                      }
                                                                                      multiline={false}
                                                                                      onChange={[Function]}
                                                                                      placeholder="To...     (yyyy-MM-dd)"
                                                                                      value=""
                                                                                    >
                                                                                      <WithStyles(ForwardRef(InputBase))
                                                                                        autoFocus={false}
                                                                                        classes={
                                                                                          Object {
                                                                                            "colorSecondary": "MuiInput-colorSecondary",
                                                                                            "disabled": "Mui-disabled",
                                                                                            "error": "Mui-error",
                                                                                            "focused": "Mui-focused",
                                                                                            "formControl": "MuiInput-formControl",
                                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                                            "input": "MuiInput-input",
                                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                                            "marginDense": "MuiInput-marginDense",
                                                                                            "multiline": "MuiInput-multiline",
                                                                                            "root": "MuiInput-root MuiInput-underline",
                                                                                            "underline": null,
                                                                                          }
                                                                                        }
                                                                                        endAdornment={
                                                                                          <ForwardRef(WithStyles)
                                                                                            position="end"
                                                                                          >
                                                                                            <ForwardRef(WithStyles)
                                                                                              onClick={[Function]}
                                                                                              size="small"
                                                                                            >
                                                                                              <KeyboardIcon />
                                                                                            </ForwardRef(WithStyles)>
                                                                                          </ForwardRef(WithStyles)>
                                                                                        }
                                                                                        fullWidth={false}
                                                                                        inputComponent="input"
                                                                                        inputProps={
                                                                                          Object {
                                                                                            "aria-label": "investigations.end_date date filter to",
                                                                                          }
                                                                                        }
                                                                                        multiline={false}
                                                                                        onChange={[Function]}
                                                                                        placeholder="To...     (yyyy-MM-dd)"
                                                                                        type="text"
                                                                                        value=""
                                                                                      >
                                                                                        <ForwardRef(InputBase)
                                                                                          autoFocus={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                              "adornedStart": "MuiInputBase-adornedStart",
                                                                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                                                                              "disabled": "Mui-disabled Mui-disabled",
                                                                                              "error": "Mui-error Mui-error",
                                                                                              "focused": "Mui-focused Mui-focused",
                                                                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                              "input": "MuiInputBase-input MuiInput-input",
                                                                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                                                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                                            }
                                                                                          }
                                                                                          endAdornment={
                                                                                            <ForwardRef(WithStyles)
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(WithStyles)
                                                                                                onClick={[Function]}
                                                                                                size="small"
                                                                                              >
                                                                                                <KeyboardIcon />
                                                                                              </ForwardRef(WithStyles)>
                                                                                            </ForwardRef(WithStyles)>
                                                                                          }
                                                                                          fullWidth={false}
                                                                                          inputComponent="input"
                                                                                          inputProps={
                                                                                            Object {
                                                                                              "aria-label": "investigations.end_date date filter to",
                                                                                            }
                                                                                          }
                                                                                          multiline={false}
                                                                                          onChange={[Function]}
                                                                                          placeholder="To...     (yyyy-MM-dd)"
                                                                                          type="text"
                                                                                          value=""
                                                                                        >
                                                                                          <div
                                                                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-colorSecondary MuiInput-colorSecondary MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
                                                                                            onClick={[Function]}
                                                                                          >
                                                                                            <input
                                                                                              aria-invalid={false}
                                                                                              aria-label="investigations.end_date date filter to"
                                                                                              autoFocus={false}
                                                                                              className="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
                                                                                              disabled={false}
                                                                                              onAnimationStart={[Function]}
                                                                                              onBlur={[Function]}
                                                                                              onChange={[Function]}
                                                                                              onFocus={[Function]}
                                                                                              placeholder="To...     (yyyy-MM-dd)"
                                                                                              required={false}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                            <WithStyles(ForwardRef(InputAdornment))
                                                                                              position="end"
                                                                                            >
                                                                                              <ForwardRef(InputAdornment)
                                                                                                classes={
                                                                                                  Object {
                                                                                                    "disablePointerEvents": "MuiInputAdornment-disablePointerEvents",
                                                                                                    "filled": "MuiInputAdornment-filled",
                                                                                                    "hiddenLabel": "MuiInputAdornment-hiddenLabel",
                                                                                                    "marginDense": "MuiInputAdornment-marginDense",
                                                                                                    "positionEnd": "MuiInputAdornment-positionEnd",
                                                                                                    "positionStart": "MuiInputAdornment-positionStart",
                                                                                                    "root": "MuiInputAdornment-root",
                                                                                                  }
                                                                                                }
                                                                                                position="end"
                                                                                              >
                                                                                                <div
                                                                                                  className="MuiInputAdornment-root MuiInputAdornment-positionEnd"
                                                                                                >
                                                                                                  <WithStyles(ForwardRef(IconButton))
                                                                                                    onClick={[Function]}
                                                                                                    size="small"
                                                                                                  >
                                                                                                    <ForwardRef(IconButton)
                                                                                                      classes={
                                                                                                        Object {
                                                                                                          "colorInherit": "MuiIconButton-colorInherit",
                                                                                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                                                                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                                                                                          "disabled": "Mui-disabled",
                                                                                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                                                                                          "edgeStart": "MuiIconButton-edgeStart",
                                                                                                          "label": "MuiIconButton-label",
                                                                                                          "root": "MuiIconButton-root",
                                                                                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                                                                                        }
                                                                                                      }
                                                                                                      onClick={[Function]}
                                                                                                      size="small"
                                                                                                    >
                                                                                                      <WithStyles(ForwardRef(ButtonBase))
                                                                                                        centerRipple={true}
                                                                                                        className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                        disabled={false}
                                                                                                        focusRipple={true}
                                                                                                        onClick={[Function]}
                                                                                                      >
                                                                                                        <ForwardRef(ButtonBase)
                                                                                                          centerRipple={true}
                                                                                                          className="MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                          classes={
                                                                                                            Object {
                                                                                                              "disabled": "Mui-disabled",
                                                                                                              "focusVisible": "Mui-focusVisible",
                                                                                                              "root": "MuiButtonBase-root",
                                                                                                            }
                                                                                                          }
                                                                                                          disabled={false}
                                                                                                          focusRipple={true}
                                                                                                          onClick={[Function]}
                                                                                                        >
                                                                                                          <button
                                                                                                            className="MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeSmall"
                                                                                                            disabled={false}
                                                                                                            onBlur={[Function]}
                                                                                                            onClick={[Function]}
                                                                                                            onDragLeave={[Function]}
                                                                                                            onFocus={[Function]}
                                                                                                            onKeyDown={[Function]}
                                                                                                            onKeyUp={[Function]}
                                                                                                            onMouseDown={[Function]}
                                                                                                            onMouseLeave={[Function]}
                                                                                                            onMouseUp={[Function]}
                                                                                                            onTouchEnd={[Function]}
                                                                                                            onTouchMove={[Function]}
                                                                                                            onTouchStart={[Function]}
                                                                                                            tabIndex={0}
                                                                                                            type="button"
                                                                                                          >
                                                                                                            <span
                                                                                                              className="MuiIconButton-label"
                                                                                                            >
                                                                                                              <KeyboardIcon>
                                                                                                                <WithStyles(ForwardRef(SvgIcon))>
                                                                                                                  <ForwardRef(SvgIcon)
                                                                                                                    classes={
                                                                                                                      Object {
                                                                                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                                                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                                                        "colorError": "MuiSvgIcon-colorError",
                                                                                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                                                        "root": "MuiSvgIcon-root",
                                                                                                                      }
                                                                                                                    }
                                                                                                                  >
                                                                                                                    <svg
                                                                                                                      aria-hidden={true}
                                                                                                                      className="MuiSvgIcon-root"
                                                                                                                      focusable="false"
                                                                                                                      viewBox="0 0 24 24"
                                                                                                                    >
                                                                                                                      <path
                                                                                                                        d="M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
                                                                                                                      />
                                                                                                                      <path
                                                                                                                        d="M0 0h24v24H0z"
                                                                                                                        fill="none"
                                                                                                                      />
                                                                                                                    </svg>
                                                                                                                  </ForwardRef(SvgIcon)>
                                                                                                                </WithStyles(ForwardRef(SvgIcon))>
                                                                                                              </KeyboardIcon>
                                                                                                            </span>
                                                                                                            <WithStyles(memo)
                                                                                                              center={true}
                                                                                                            >
                                                                                                              <ForwardRef(TouchRipple)
                                                                                                                center={true}
                                                                                                                classes={
                                                                                                                  Object {
                                                                                                                    "child": "MuiTouchRipple-child",
                                                                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                                                    "root": "MuiTouchRipple-root",
                                                                                                                  }
                                                                                                                }
                                                                                                              >
                                                                                                                <span
                                                                                                                  className="MuiTouchRipple-root"
                                                                                                                >
                                                                                                                  <TransitionGroup
                                                                                                                    childFactory={[Function]}
                                                                                                                    component={null}
                                                                                                                    exit={true}
                                                                                                                  />
                                                                                                                </span>
                                                                                                              </ForwardRef(TouchRipple)>
                                                                                                            </WithStyles(memo)>
                                                                                                          </button>
                                                                                                        </ForwardRef(ButtonBase)>
                                                                                                      </WithStyles(ForwardRef(ButtonBase))>
                                                                                                    </ForwardRef(IconButton)>
                                                                                                  </WithStyles(ForwardRef(IconButton))>
                                                                                                </div>
                                                                                              </ForwardRef(InputAdornment)>
                                                                                            </WithStyles(ForwardRef(InputAdornment))>
                                                                                          </div>
                                                                                        </ForwardRef(InputBase)>
                                                                                      </WithStyles(ForwardRef(InputBase))>
                                                                                    </ForwardRef(Input)>
                                                                                  </WithStyles(ForwardRef(Input))>
                                                                                </div>
                                                                              </ForwardRef(FormControl)>
                                                                            </WithStyles(ForwardRef(FormControl))>
                                                                          </ForwardRef(TextField)>
                                                                        </WithStyles(ForwardRef(TextField))>
                                                                      </Rifm>
                                                                    </KeyboardDateInput>
                                                                    <WithStyles(ModalDialog)
                                                                      cancelLabel="Cancel"
                                                                      clearLabel="Clear"
                                                                      clearable={true}
                                                                      okLabel="OK"
                                                                      onAccept={[Function]}
                                                                      onClear={[Function]}
                                                                      onDismiss={[Function]}
                                                                      onSetToday={[Function]}
                                                                      open={false}
                                                                      showTodayButton={false}
                                                                      todayLabel="Today"
                                                                    >
                                                                      <ModalDialog
                                                                        cancelLabel="Cancel"
                                                                        classes={
                                                                          Object {
                                                                            "dialog": "MuiPickersModal-dialog",
                                                                            "dialogRoot": "MuiPickersModal-dialogRoot",
                                                                            "dialogRootWider": "MuiPickersModal-dialogRootWider",
                                                                            "withAdditionalAction": "MuiPickersModal-withAdditionalAction",
                                                                          }
                                                                        }
                                                                        clearLabel="Clear"
                                                                        clearable={true}
                                                                        okLabel="OK"
                                                                        onAccept={[Function]}
                                                                        onClear={[Function]}
                                                                        onDismiss={[Function]}
                                                                        onSetToday={[Function]}
                                                                        open={false}
                                                                        showTodayButton={false}
                                                                        todayLabel="Today"
                                                                      >
                                                                        <WithStyles(ForwardRef(Dialog))
                                                                          classes={
                                                                            Object {
                                                                              "paper": "MuiPickersModal-dialogRoot",
                                                                            }
                                                                          }
                                                                          onClose={[Function]}
                                                                          open={false}
                                                                          role="dialog"
                                                                        >
                                                                          <ForwardRef(Dialog)
                                                                            classes={
                                                                              Object {
                                                                                "container": "MuiDialog-container",
                                                                                "paper": "MuiDialog-paper MuiPickersModal-dialogRoot",
                                                                                "paperFullScreen": "MuiDialog-paperFullScreen",
                                                                                "paperFullWidth": "MuiDialog-paperFullWidth",
                                                                                "paperScrollBody": "MuiDialog-paperScrollBody",
                                                                                "paperScrollPaper": "MuiDialog-paperScrollPaper",
                                                                                "paperWidthFalse": "MuiDialog-paperWidthFalse",
                                                                                "paperWidthLg": "MuiDialog-paperWidthLg",
                                                                                "paperWidthMd": "MuiDialog-paperWidthMd",
                                                                                "paperWidthSm": "MuiDialog-paperWidthSm",
                                                                                "paperWidthXl": "MuiDialog-paperWidthXl",
                                                                                "paperWidthXs": "MuiDialog-paperWidthXs",
                                                                                "root": "MuiDialog-root",
                                                                                "scrollBody": "MuiDialog-scrollBody",
                                                                                "scrollPaper": "MuiDialog-scrollPaper",
                                                                              }
                                                                            }
                                                                            onClose={[Function]}
                                                                            open={false}
                                                                            role="dialog"
                                                                          >
                                                                            <ForwardRef(Modal)
                                                                              BackdropComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "Naked": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "propTypes": Object {
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "classes": [Function],
                                                                                      "invisible": [Function],
                                                                                      "open": [Function],
                                                                                      "transitionDuration": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "displayName": "WithStyles(ForwardRef(Backdrop))",
                                                                                  "options": Object {
                                                                                    "defaultTheme": Object {
                                                                                      "breakpoints": Object {
                                                                                        "between": [Function],
                                                                                        "down": [Function],
                                                                                        "keys": Array [
                                                                                          "xs",
                                                                                          "sm",
                                                                                          "md",
                                                                                          "lg",
                                                                                          "xl",
                                                                                        ],
                                                                                        "only": [Function],
                                                                                        "up": [Function],
                                                                                        "values": Object {
                                                                                          "lg": 1280,
                                                                                          "md": 960,
                                                                                          "sm": 600,
                                                                                          "xl": 1920,
                                                                                          "xs": 0,
                                                                                        },
                                                                                        "width": [Function],
                                                                                      },
                                                                                      "direction": "ltr",
                                                                                      "mixins": Object {
                                                                                        "gutters": [Function],
                                                                                        "toolbar": Object {
                                                                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                            "minHeight": 48,
                                                                                          },
                                                                                          "@media (min-width:600px)": Object {
                                                                                            "minHeight": 64,
                                                                                          },
                                                                                          "minHeight": 56,
                                                                                        },
                                                                                      },
                                                                                      "overrides": Object {},
                                                                                      "palette": Object {
                                                                                        "action": Object {
                                                                                          "activatedOpacity": 0.12,
                                                                                          "active": "rgba(0, 0, 0, 0.54)",
                                                                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                          "disabledOpacity": 0.38,
                                                                                          "focus": "rgba(0, 0, 0, 0.12)",
                                                                                          "focusOpacity": 0.12,
                                                                                          "hover": "rgba(0, 0, 0, 0.04)",
                                                                                          "hoverOpacity": 0.04,
                                                                                          "selected": "rgba(0, 0, 0, 0.08)",
                                                                                          "selectedOpacity": 0.08,
                                                                                        },
                                                                                        "augmentColor": [Function],
                                                                                        "background": Object {
                                                                                          "default": "#fafafa",
                                                                                          "paper": "#fff",
                                                                                        },
                                                                                        "common": Object {
                                                                                          "black": "#000",
                                                                                          "white": "#fff",
                                                                                        },
                                                                                        "contrastThreshold": 3,
                                                                                        "divider": "rgba(0, 0, 0, 0.12)",
                                                                                        "error": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#d32f2f",
                                                                                          "light": "#e57373",
                                                                                          "main": "#f44336",
                                                                                        },
                                                                                        "getContrastText": [Function],
                                                                                        "grey": Object {
                                                                                          "100": "#f5f5f5",
                                                                                          "200": "#eeeeee",
                                                                                          "300": "#e0e0e0",
                                                                                          "400": "#bdbdbd",
                                                                                          "50": "#fafafa",
                                                                                          "500": "#9e9e9e",
                                                                                          "600": "#757575",
                                                                                          "700": "#616161",
                                                                                          "800": "#424242",
                                                                                          "900": "#212121",
                                                                                          "A100": "#d5d5d5",
                                                                                          "A200": "#aaaaaa",
                                                                                          "A400": "#303030",
                                                                                          "A700": "#616161",
                                                                                        },
                                                                                        "info": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#1976d2",
                                                                                          "light": "#64b5f6",
                                                                                          "main": "#2196f3",
                                                                                        },
                                                                                        "primary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#303f9f",
                                                                                          "light": "#7986cb",
                                                                                          "main": "#3f51b5",
                                                                                        },
                                                                                        "secondary": Object {
                                                                                          "contrastText": "#fff",
                                                                                          "dark": "#c51162",
                                                                                          "light": "#ff4081",
                                                                                          "main": "#f50057",
                                                                                        },
                                                                                        "success": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#388e3c",
                                                                                          "light": "#81c784",
                                                                                          "main": "#4caf50",
                                                                                        },
                                                                                        "text": Object {
                                                                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                          "hint": "rgba(0, 0, 0, 0.38)",
                                                                                          "primary": "rgba(0, 0, 0, 0.87)",
                                                                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                        },
                                                                                        "tonalOffset": 0.2,
                                                                                        "type": "light",
                                                                                        "warning": Object {
                                                                                          "contrastText": "rgba(0, 0, 0, 0.87)",
                                                                                          "dark": "#f57c00",
                                                                                          "light": "#ffb74d",
                                                                                          "main": "#ff9800",
                                                                                        },
                                                                                      },
                                                                                      "props": Object {},
                                                                                      "shadows": Array [
                                                                                        "none",
                                                                                        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                      ],
                                                                                      "shape": Object {
                                                                                        "borderRadius": 4,
                                                                                      },
                                                                                      "spacing": [Function],
                                                                                      "transitions": Object {
                                                                                        "create": [Function],
                                                                                        "duration": Object {
                                                                                          "complex": 375,
                                                                                          "enteringScreen": 225,
                                                                                          "leavingScreen": 195,
                                                                                          "short": 250,
                                                                                          "shorter": 200,
                                                                                          "shortest": 150,
                                                                                          "standard": 300,
                                                                                        },
                                                                                        "easing": Object {
                                                                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                        },
                                                                                        "getAutoHeightDuration": [Function],
                                                                                      },
                                                                                      "typography": Object {
                                                                                        "body1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.5,
                                                                                        },
                                                                                        "body2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.01071em",
                                                                                          "lineHeight": 1.43,
                                                                                        },
                                                                                        "button": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.02857em",
                                                                                          "lineHeight": 1.75,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "caption": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.03333em",
                                                                                          "lineHeight": 1.66,
                                                                                        },
                                                                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                        "fontSize": 14,
                                                                                        "fontWeightBold": 700,
                                                                                        "fontWeightLight": 300,
                                                                                        "fontWeightMedium": 500,
                                                                                        "fontWeightRegular": 400,
                                                                                        "h1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "6rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.01562em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3.75rem",
                                                                                          "fontWeight": 300,
                                                                                          "letterSpacing": "-0.00833em",
                                                                                          "lineHeight": 1.2,
                                                                                        },
                                                                                        "h3": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "3rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.167,
                                                                                        },
                                                                                        "h4": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "2.125rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00735em",
                                                                                          "lineHeight": 1.235,
                                                                                        },
                                                                                        "h5": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.5rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0em",
                                                                                          "lineHeight": 1.334,
                                                                                        },
                                                                                        "h6": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1.25rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.0075em",
                                                                                          "lineHeight": 1.6,
                                                                                        },
                                                                                        "htmlFontSize": 16,
                                                                                        "overline": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.75rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.08333em",
                                                                                          "lineHeight": 2.66,
                                                                                          "textTransform": "uppercase",
                                                                                        },
                                                                                        "pxToRem": [Function],
                                                                                        "round": [Function],
                                                                                        "subtitle1": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "1rem",
                                                                                          "fontWeight": 400,
                                                                                          "letterSpacing": "0.00938em",
                                                                                          "lineHeight": 1.75,
                                                                                        },
                                                                                        "subtitle2": Object {
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": "0.875rem",
                                                                                          "fontWeight": 500,
                                                                                          "letterSpacing": "0.00714em",
                                                                                          "lineHeight": 1.57,
                                                                                        },
                                                                                      },
                                                                                      "zIndex": Object {
                                                                                        "appBar": 1100,
                                                                                        "drawer": 1200,
                                                                                        "mobileStepper": 1000,
                                                                                        "modal": 1300,
                                                                                        "snackbar": 1400,
                                                                                        "speedDial": 1050,
                                                                                        "tooltip": 1500,
                                                                                      },
                                                                                    },
                                                                                    "name": "MuiBackdrop",
                                                                                  },
                                                                                  "propTypes": Object {
                                                                                    "classes": [Function],
                                                                                    "innerRef": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "useStyles": [Function],
                                                                                }
                                                                              }
                                                                              BackdropProps={
                                                                                Object {
                                                                                  "transitionDuration": Object {
                                                                                    "enter": 225,
                                                                                    "exit": 195,
                                                                                  },
                                                                                }
                                                                              }
                                                                              className="MuiDialog-root"
                                                                              closeAfterTransition={true}
                                                                              disableBackdropClick={false}
                                                                              disableEscapeKeyDown={false}
                                                                              onClose={[Function]}
                                                                              open={false}
                                                                              role="dialog"
                                                                            />
                                                                          </ForwardRef(Dialog)>
                                                                        </WithStyles(ForwardRef(Dialog))>
                                                                      </ModalDialog>
                                                                    </WithStyles(ModalDialog)>
                                                                  </ModalWrapper>
                                                                </Wrapper>
                                                              </PickerWithState>
                                                            </MuiPickersUtilsProvider>
                                                          </form>
                                                        </DateColumnFilter>
                                                      </div>
                                                      <Draggable
                                                        allowAnyClick={false}
                                                        axis="none"
                                                        bounds={false}
                                                        cancel={null}
                                                        defaultClassName="react-draggable"
                                                        defaultClassNameDragged="react-draggable-dragged"
                                                        defaultClassNameDragging="react-draggable-dragging"
                                                        defaultPosition={
                                                          Object {
                                                            "x": 0,
                                                            "y": 0,
                                                          }
                                                        }
                                                        disabled={false}
                                                        enableUserSelectHack={true}
                                                        grid={null}
                                                        handle={null}
                                                        offsetParent={null}
                                                        onDrag={[Function]}
                                                        onMouseDown={[Function]}
                                                        onStart={[Function]}
                                                        onStop={[Function]}
                                                        position={null}
                                                        scale={1}
                                                        transform={null}
                                                      >
                                                        <DraggableCore
                                                          allowAnyClick={false}
                                                          cancel={null}
                                                          disabled={false}
                                                          enableUserSelectHack={true}
                                                          grid={null}
                                                          handle={null}
                                                          offsetParent={null}
                                                          onDrag={[Function]}
                                                          onMouseDown={[Function]}
                                                          onStart={[Function]}
                                                          onStop={[Function]}
                                                          scale={1}
                                                          transform={null}
                                                        >
                                                          <ForwardRef
                                                            className="react-draggable"
                                                            fontSize="small"
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            style={
                                                              Object {
                                                                "cursor": "col-resize",
                                                              }
                                                            }
                                                            transform="translate(0,0)"
                                                          >
                                                            <WithStyles(ForwardRef(SvgIcon))
                                                              className="react-draggable"
                                                              fontSize="small"
                                                              onMouseDown={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              style={
                                                                Object {
                                                                  "cursor": "col-resize",
                                                                }
                                                              }
                                                              transform="translate(0,0)"
                                                            >
                                                              <ForwardRef(SvgIcon)
                                                                className="react-draggable"
                                                                classes={
                                                                  Object {
                                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                    "colorError": "MuiSvgIcon-colorError",
                                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                    "root": "MuiSvgIcon-root",
                                                                  }
                                                                }
                                                                fontSize="small"
                                                                onMouseDown={[Function]}
                                                                onMouseUp={[Function]}
                                                                onTouchEnd={[Function]}
                                                                style={
                                                                  Object {
                                                                    "cursor": "col-resize",
                                                                  }
                                                                }
                                                                transform="translate(0,0)"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="MuiSvgIcon-root react-draggable MuiSvgIcon-fontSizeSmall"
                                                                  focusable="false"
                                                                  onMouseDown={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "cursor": "col-resize",
                                                                    }
                                                                  }
                                                                  transform="translate(0,0)"
                                                                  viewBox="0 0 24 24"
                                                                >
                                                                  <path
                                                                    d="M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                                  />
                                                                </svg>
                                                              </ForwardRef(SvgIcon)>
                                                            </WithStyles(ForwardRef(SvgIcon))>
                                                          </ForwardRef>
                                                        </DraggableCore>
                                                      </Draggable>
                                                    </div>
                                                  </ForwardRef(TableCell)>
                                                </WithStyles(ForwardRef(TableCell))>
                                              </DataHeader>
                                            </div>
                                          </div>
                                          <Grid
                                            aria-label="grid"
                                            aria-readonly={null}
                                            autoContainerWidth={true}
                                            autoHeight={false}
                                            autoWidth={false}
                                            cellRangeRenderer={[Function]}
                                            cellRenderer={[Function]}
                                            className="ReactVirtualized__Table__Grid"
                                            columnCount={1}
                                            columnWidth={640}
                                            containerRole="rowgroup"
                                            containerStyle={Object {}}
                                            disableHeader={false}
                                            estimatedColumnSize={100}
                                            estimatedRowSize={30}
                                            getScrollbarSize={[Function]}
                                            headerHeight={110}
                                            headerRowRenderer={[Function]}
                                            headerStyle={Object {}}
                                            height={390}
                                            isScrollingOptOut={false}
                                            noContentRenderer={[Function]}
                                            noRowsRenderer={[Function]}
                                            onRowsRendered={[Function]}
                                            onScroll={[Function]}
                                            onScrollbarPresenceChange={[Function]}
                                            onSectionRendered={[Function]}
                                            overscanColumnCount={0}
                                            overscanIndicesGetter={[Function]}
                                            overscanRowCount={10}
                                            role="rowgroup"
                                            rowClassName={[Function]}
                                            rowCount={0}
                                            rowGetter={[Function]}
                                            rowHeight={[Function]}
                                            rowRenderer={[Function]}
                                            rowStyle={Object {}}
                                            scrollToAlignment="auto"
                                            scrollToColumn={-1}
                                            scrollToIndex={-1}
                                            scrollToRow={-1}
                                            scrollbarWidth={0}
                                            scrollingResetTimeInterval={150}
                                            style={
                                              Object {
                                                "overflowX": "hidden",
                                              }
                                            }
                                            tabIndex={0}
                                            width={640}
                                          >
                                            <div
                                              aria-label="grid"
                                              aria-readonly={null}
                                              className="ReactVirtualized__Grid ReactVirtualized__Table__Grid"
                                              onScroll={[Function]}
                                              role="rowgroup"
                                              style={
                                                Object {
                                                  "WebkitOverflowScrolling": "touch",
                                                  "boxSizing": "border-box",
                                                  "direction": "ltr",
                                                  "height": 390,
                                                  "overflowX": "hidden",
                                                  "overflowY": "hidden",
                                                  "position": "relative",
                                                  "width": 640,
                                                  "willChange": "transform",
                                                }
                                              }
                                              tabIndex={0}
                                            />
                                          </Grid>
                                        </div>
                                      </Table>
                                    </InfiniteLoader>
                                  </div>
                                </AutoSizer>
                              </VirtualizedTable>
                            </WithStyles(VirtualizedTable)>
                          </InvestigationSearchTable>
                        </Connect(InvestigationSearchTable)>
                      </div>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </div>
              </Styled(MuiBox)>
            </div>
          </Styled(MuiBox)>
        </TabPanel>
        <TabPanel
          index="dataset"
          value="investigation"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-dataset"
            border={0}
            component="div"
            hidden={true}
            id="simple-tabpanel-dataset"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-dataset"
              className="MuiBox-root MuiBox-root-44"
              hidden={true}
              id="simple-tabpanel-dataset"
              role="tabpanel"
            />
          </Styled(MuiBox)>
        </TabPanel>
        <TabPanel
          index="datafile"
          value="investigation"
        >
          <Styled(MuiBox)
            aria-labelledby="simple-tab-datafile"
            border={0}
            component="div"
            hidden={true}
            id="simple-tabpanel-datafile"
            role="tabpanel"
          >
            <div
              aria-labelledby="simple-tab-datafile"
              className="MuiBox-root MuiBox-root-45"
              hidden={true}
              id="simple-tabpanel-datafile"
              role="tabpanel"
            />
          </Styled(MuiBox)>
        </TabPanel>
      </div>
    </SearchPageTable>
  </Connect(SearchPageTable)>
</Provider>
`;

exports[`SearchPageTable renders SearchPageTable correctly before request 1`] = `
<div>
  <Connect(SearchPageTable)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <SearchPageTable
      datafile={Array []}
      datafileTab={false}
      dataset={Array []}
      datasetTab={false}
      dispatch={[Function]}
      investigation={Array []}
      investigationTab={false}
      requestReceived={false}
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Styled(MuiBox)
        color="secondary.main"
        px={3}
        py={1}
      >
        <div
          className="MuiBox-root MuiBox-root-1"
        >
          <h2>
            searchPageTable.header
          </h2>
          searchPageTable.text
        </div>
      </Styled(MuiBox)>
    </SearchPageTable>
  </Connect(SearchPageTable)>
</div>
`;
