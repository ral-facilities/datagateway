// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home page component homepage renders correctly 1`] = `
<div
  id="dg-homepage"
>
  <div
    style={
      Object {
        "backgroundImage": "url(test-bakcgroundImage)",
        "backgroundPosition": "center 40%",
        "height": 250,
        "width": "100%",
      }
    }
  >
    <div
      style={
        Object {
          "backgroundImage": "url(test-greenSwirl1Image), url(test-decal1Image)",
          "backgroundPosition": "top left, top right",
          "backgroundRepeat": "no-repeat",
          "height": 250,
          "width": "100%",
        }
      }
    >
      <ForwardRef(Box)
        sx={
          Object {
            "left": "50%",
            "position": "relative",
            "top": "45px",
            "transform": "translate(-50%)",
          }
        }
      >
        <ForwardRef(Typography)
          sx={
            Object {
              "color": "#FFFFFF",
              "fontSize": "48px",
              "fontWeight": "lighter",
              "margin": "auto",
              "textAlign": "center",
            }
          }
          variant="h2"
        >
          <Trans
            i18nKey="home_page.title_line1"
          >
            <strong>
              Data discovery
            </strong>
             and 
            <strong>
              access
            </strong>
          </Trans>
        </ForwardRef(Typography)>
        <ForwardRef(Typography)
          sx={
            Object {
              "color": "#FFFFFF",
              "fontSize": "48px",
              "fontWeight": "lighter",
              "margin": "auto",
              "textAlign": "center",
            }
          }
          variant="h2"
        >
          <Trans
            i18nKey="home_page.title_line2"
          >
            for 
            <strong>
              large-scale
            </strong>
            science facilities
          </Trans>
        </ForwardRef(Typography)>
      </ForwardRef(Box)>
    </div>
  </div>
  <ForwardRef(Box)
    sx={
      Object {
        "marginLeft": "8%",
        "marginRight": "8%",
        "transform": "translate(0px, -20px)",
      }
    }
  >
    <ForwardRef(Paper)
      elevation={1}
      sx={
        Object {
          "borderRadius": "4px",
          "height": "100%",
          "marginBottom": 2,
        }
      }
    >
      <ForwardRef(Grid)
        container={true}
        style={
          Object {
            "height": "100%",
          }
        }
      >
        <ForwardRef(Grid)
          item={true}
          xs={6}
        >
          <ForwardRef(Box)
            sx={
              Object {
                "boxSizing": "border-box",
                "display": "flex",
                "flexDirection": "column",
                "height": "100%",
                "justifyContent": "flex-start",
                "padding": 2,
              }
            }
          >
            <ForwardRef(Typography)
              sx={[Function]}
              variant="h3"
            >
              home_page.browse.title
            </ForwardRef(Typography)>
            <Styled(ForwardRef(Typography))
              variant="body1"
            >
              home_page.browse.description1
            </Styled(ForwardRef(Typography))>
            <Styled(ForwardRef(Typography))
              variant="body1"
            >
              <Trans
                i18nKey="home_page.browse.description2"
              >
                <strong>
                  DataGateway
                </strong>
                 focuses on providing data discovery and data access functionality to the data.
              </Trans>
            </Styled(ForwardRef(Typography))>
            <ForwardRef(Box)
              marginTop="16px"
            >
              <ForwardRef(Button)
                color="primary"
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "innerRef": [Function],
                      "onClick": [Function],
                      "replace": [Function],
                      "target": [Function],
                      "to": [Function],
                    },
                    "render": [Function],
                  }
                }
                data-testid="browse-button"
                to="home_page.browse.link"
                variant="contained"
              >
                home_page.browse.button
              </ForwardRef(Button)>
            </ForwardRef(Box)>
          </ForwardRef(Box)>
        </ForwardRef(Grid)>
        <ForwardRef(Grid)
          item={true}
          xs={6}
        >
          <div
            style={
              Object {
                "backgroundImage": "url(test-facilityImage)",
                "backgroundPosition": "bottom right",
                "backgroundRepeat": "no-repeat",
                "backgroundSize": "cover",
                "borderRadius": "4px",
                "height": "100%",
                "width": "100%",
              }
            }
          >
            <Styled(div)
              decal2DarkHCImage="test-Decal2DarkHCImage"
              decal2DarkImage="test-decal2DarkImage"
              decal2Image="test-decal2Image"
            />
          </div>
        </ForwardRef(Grid)>
      </ForwardRef(Grid)>
    </ForwardRef(Paper)>
    <ForwardRef(Grid)
      container={true}
      spacing={2}
    >
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={12}
      >
        <ForwardRef(Paper)
          elevation={1}
          sx={
            Object {
              "borderRadius": "4px",
              "height": "100%",
              "marginBottom": 2,
            }
          }
        >
          <ForwardRef(Box)
            sx={
              Object {
                "boxSizing": "border-box",
                "display": "flex",
                "flexDirection": "column",
                "height": "100%",
                "justifyContent": "flex-start",
                "padding": 2,
              }
            }
          >
            <ForwardRef(Avatar)
              sx={
                Object {
                  "backgroundColor": "#1E5DF8",
                  "color": "#FFFFFF",
                  "height": "60px",
                  "marginBottom": 2,
                  "width": "60px",
                }
              }
            >
              <Memo(ForwardRef(SearchIcon))
                sx={
                  Object {
                    "transform": "scale(1.75)",
                  }
                }
              />
            </ForwardRef(Avatar)>
            <Styled(ForwardRef(Typography))
              variant="h4"
            >
              home_page.search.title
            </Styled(ForwardRef(Typography))>
            <Styled(ForwardRef(Typography))
              variant="body1"
            >
              home_page.search.description
            </Styled(ForwardRef(Typography))>
            <ForwardRef(Box)
              marginTop="auto"
            >
              <ForwardRef(Button)
                color="primary"
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "innerRef": [Function],
                      "onClick": [Function],
                      "replace": [Function],
                      "target": [Function],
                      "to": [Function],
                    },
                    "render": [Function],
                  }
                }
                data-testid="search-button"
                to="home_page.search.link"
                variant="contained"
              >
                home_page.search.button
              </ForwardRef(Button)>
            </ForwardRef(Box)>
          </ForwardRef(Box)>
        </ForwardRef(Paper)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={12}
      >
        <ForwardRef(Paper)
          elevation={1}
          sx={
            Object {
              "borderRadius": "4px",
              "height": "100%",
              "marginBottom": 2,
            }
          }
        >
          <ForwardRef(Box)
            sx={
              Object {
                "boxSizing": "border-box",
                "display": "flex",
                "flexDirection": "column",
                "height": "100%",
                "justifyContent": "flex-start",
                "padding": 2,
              }
            }
          >
            <ForwardRef(Avatar)
              sx={
                Object {
                  "backgroundColor": "#1E5DF8",
                  "color": "#FFFFFF",
                  "height": "60px",
                  "marginBottom": 2,
                  "width": "60px",
                }
              }
            >
              <Memo(ForwardRef(GetAppIcon))
                sx={
                  Object {
                    "transform": "scale(1.75)",
                  }
                }
              />
            </ForwardRef(Avatar)>
            <Styled(ForwardRef(Typography))
              variant="h4"
            >
              home_page.download.title
            </Styled(ForwardRef(Typography))>
            <Styled(ForwardRef(Typography))
              variant="body1"
            >
              home_page.download.description
            </Styled(ForwardRef(Typography))>
            <ForwardRef(Box)
              marginTop="auto"
            >
              <ForwardRef(Button)
                color="primary"
                component={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "propTypes": Object {
                      "innerRef": [Function],
                      "onClick": [Function],
                      "replace": [Function],
                      "target": [Function],
                      "to": [Function],
                    },
                    "render": [Function],
                  }
                }
                data-testid="download-button"
                to="home_page.download.link"
                variant="contained"
              >
                home_page.download.button
              </ForwardRef(Button)>
            </ForwardRef(Box)>
          </ForwardRef(Box)>
        </ForwardRef(Paper)>
      </ForwardRef(Grid)>
      <ForwardRef(Grid)
        item={true}
        md={4}
        sm={12}
      >
        <ForwardRef(Paper)
          elevation={1}
          sx={
            Object {
              "backgroundColor": "#003088",
              "borderRadius": "4px",
              "height": "100%",
              "marginBottom": 2,
            }
          }
        >
          <div
            style={
              Object {
                "backgroundImage": "url(test-greenSwirl2Image)",
                "backgroundPosition": "top right",
                "backgroundRepeat": "no-repeat",
                "backgroundSize": "auto 100%",
                "height": "100%",
              }
            }
          >
            <ForwardRef(Box)
              sx={
                Object {
                  "boxSizing": "border-box",
                  "display": "flex",
                  "flexDirection": "column",
                  "height": "100%",
                  "justifyContent": "flex-start",
                  "padding": 2,
                }
              }
            >
              <Styled(ForwardRef(Typography))
                variant="h4"
              >
                home_page.facility.title
              </Styled(ForwardRef(Typography))>
              <Styled(ForwardRef(Typography))
                variant="body1"
              >
                home_page.facility.description
              </Styled(ForwardRef(Typography))>
              <ForwardRef(Box)
                marginTop="auto"
              >
                <Styled(ForwardRef(Button))
                  color="primary"
                  data-testid="facility-button"
                  href="home_page.facility.link"
                  variant="contained"
                >
                  home_page.facility.button
                </Styled(ForwardRef(Button))>
              </ForwardRef(Box)>
            </ForwardRef(Box)>
          </div>
        </ForwardRef(Paper)>
      </ForwardRef(Grid)>
    </ForwardRef(Grid)>
  </ForwardRef(Box)>
</div>
`;
