// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text filter component renders correctly 1`] = `
<div>
  <WithStyles(ForwardRef(Input))
    aria-hidden={true}
    color="secondary"
    endAdornment={
      <WithStyles(ForwardRef(InputAdornment))
        position="end"
      >
        <WithStyles(ForwardRef(Select))
          IconComponent={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            }
          }
          SelectDisplayProps={
            Object {
              "aria-label": "include or exclude",
            }
          }
          id="test-select-filter-type"
          onChange={[Function]}
          renderValue={[Function]}
          value="include"
        >
          <WithStyles(ForwardRef(MenuItem))
            id="select-filter-type-include"
            value="include"
          >
            Include
          </WithStyles(ForwardRef(MenuItem))>
          <WithStyles(ForwardRef(MenuItem))
            id="select-filter-type-exclude"
            value="exclude"
          >
            Exclude
          </WithStyles(ForwardRef(MenuItem))>
        </WithStyles(ForwardRef(Select))>
      </WithStyles(ForwardRef(InputAdornment))>
    }
    fullWidth={true}
    id="test-filter"
    inputProps={
      Object {
        "aria-label": "Filter by test",
      }
    }
    onChange={[Function]}
    placeholder="Include"
    value="test value"
  />
</div>
`;

exports[`Text filter component useTextFilter hook returns a function which can generate a working text filter 1`] = `
<div>
  <WithStyles(ForwardRef(Input))
    aria-hidden={true}
    color="secondary"
    endAdornment={
      <WithStyles(ForwardRef(InputAdornment))
        position="end"
      >
        <WithStyles(ForwardRef(Select))
          IconComponent={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "render": [Function],
              },
            }
          }
          SelectDisplayProps={
            Object {
              "aria-label": "include or exclude",
            }
          }
          id="Name-select-filter-type"
          onChange={[Function]}
          renderValue={[Function]}
          value="include"
        >
          <WithStyles(ForwardRef(MenuItem))
            id="select-filter-type-include"
            value="include"
          >
            Include
          </WithStyles(ForwardRef(MenuItem))>
          <WithStyles(ForwardRef(MenuItem))
            id="select-filter-type-exclude"
            value="exclude"
          >
            Exclude
          </WithStyles(ForwardRef(MenuItem))>
        </WithStyles(ForwardRef(Select))>
      </WithStyles(ForwardRef(InputAdornment))>
    }
    fullWidth={true}
    id="Name-filter"
    inputProps={
      Object {
        "aria-label": "Filter by Name",
      }
    }
    onChange={[Function]}
    placeholder="Include"
    value=""
  />
</div>
`;
