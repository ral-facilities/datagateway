// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Data cell component renders correctly 1`] = `
<ForwardRef(TableCell)
  component="div"
  size="small"
  variant="body"
>
  <ArrowTooltip
    enterDelay={500}
    sx={
      Object {
        "flex": 1,
      }
    }
    title="non nested property"
  >
    <ForwardRef(Typography)
      noWrap={true}
      variant="body2"
    >
      non nested property
    </ForwardRef(Typography)>
  </ArrowTooltip>
  <div
    style={
      Object {
        "height": "100%",
        "marginLeft": 18,
        "paddingLeft": "4px",
        "paddingRight": "4px",
      }
    }
  >
    <ForwardRef(Divider)
      flexItem={true}
      orientation="vertical"
      sx={
        Object {
          "height": "100%",
        }
      }
    />
  </div>
</ForwardRef(TableCell)>
`;

exports[`Data cell component renders nested cell data correctly 1`] = `
<ForwardRef(TableCell)
  component="div"
  size="small"
  variant="body"
>
  <ArrowTooltip
    enterDelay={500}
    sx={
      Object {
        "flex": 1,
      }
    }
    title="nested property"
  >
    <ForwardRef(Typography)
      noWrap={true}
      variant="body2"
    >
      nested property
    </ForwardRef(Typography)>
  </ArrowTooltip>
  <div
    style={
      Object {
        "height": "100%",
        "marginLeft": 18,
        "paddingLeft": "4px",
        "paddingRight": "4px",
      }
    }
  >
    <ForwardRef(Divider)
      flexItem={true}
      orientation="vertical"
      sx={
        Object {
          "height": "100%",
        }
      }
    />
  </div>
</ForwardRef(TableCell)>
`;

exports[`Data cell component renders provided cell data correctly 1`] = `
<ForwardRef(TableCell)
  component="div"
  size="small"
  variant="body"
>
  <ArrowTooltip
    enterDelay={500}
    sx={
      Object {
        "flex": 1,
      }
    }
    title="provided test"
  >
    <ForwardRef(Typography)
      noWrap={true}
      variant="body2"
    >
      <b>
        provided test
      </b>
    </ForwardRef(Typography)>
  </ArrowTooltip>
  <div
    style={
      Object {
        "height": "100%",
        "marginLeft": 18,
        "paddingLeft": "4px",
        "paddingRight": "4px",
      }
    }
  >
    <ForwardRef(Divider)
      flexItem={true}
      orientation="vertical"
      sx={
        Object {
          "height": "100%",
        }
      }
    />
  </div>
</ForwardRef(TableCell)>
`;
