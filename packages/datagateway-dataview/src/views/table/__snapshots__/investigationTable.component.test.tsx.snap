// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Investigation table component renders correctly 1`] = `
<WithStyles(VirtualizedTable)
  allIds={
    Array [
      1,
    ]
  }
  columns={
    Array [
      Object {
        "cellContentRenderer": [Function],
        "dataKey": "TITLE",
        "filterComponent": [Function],
        "icon": <Memo(TitleIcon) />,
        "label": "investigations.title",
      },
      Object {
        "dataKey": "VISIT_ID",
        "filterComponent": [Function],
        "icon": <Memo(FingerprintIcon) />,
        "label": "investigations.visit_id",
      },
      Object {
        "dataKey": "RB_NUMBER",
        "filterComponent": [Function],
        "icon": <Memo(FingerprintIcon) />,
        "label": "investigations.rb_number",
      },
      Object {
        "dataKey": "DOI",
        "filterComponent": [Function],
        "icon": <Memo(PublicIcon) />,
        "label": "investigations.doi",
      },
      Object {
        "dataKey": "DATASET_COUNT",
        "disableSort": true,
        "icon": <Memo(ConfirmationNumberIcon) />,
        "label": "investigations.dataset_count",
      },
      Object {
        "dataKey": "INSTRUMENT.NAME",
        "filterComponent": [Function],
        "icon": <Memo(AssessmentIcon) />,
        "label": "investigations.instrument",
      },
      Object {
        "cellContentRenderer": [Function],
        "dataKey": "STARTDATE",
        "filterComponent": [Function],
        "icon": <Memo(CalendarTodayIcon) />,
        "label": "investigations.start_date",
      },
      Object {
        "cellContentRenderer": [Function],
        "dataKey": "ENDDATE",
        "filterComponent": [Function],
        "icon": <Memo(CalendarTodayIcon) />,
        "label": "investigations.end_date",
      },
    ]
  }
  data={
    Array [
      Object {
        "DOI": "doi 1",
        "ENDDATE": "2019-07-24",
        "ID": 1,
        "INSTRUMENT": Object {
          "NAME": "LARMOR",
        },
        "NAME": "Test 1",
        "RB_NUMBER": "1",
        "SIZE": 1,
        "STARTDATE": "2019-07-23",
        "TITLE": "Test 1",
        "VISIT_ID": "1",
      },
    ]
  }
  detailsPanel={[Function]}
  loadMoreRows={[Function]}
  loading={false}
  onCheck={[Function]}
  onSort={[Function]}
  onUncheck={[Function]}
  selectedRows={Array []}
  sort={Object {}}
  totalRowCount={0}
/>
`;

exports[`Investigation table component renders details panel correctly 1`] = `
<div
  className="MuiGrid-root makeStyles-root-1 MuiGrid-container MuiGrid-direction-xs-column"
  id="details-panel"
>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={true}
  >
    <WithStyles(ForwardRef(Typography))
      variant="h6"
    >
      <b>
        Test 1
      </b>
    </WithStyles(ForwardRef(Typography))>
    <WithStyles(ForwardRef(Divider))
      className="makeStyles-divider-2"
    />
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={true}
  >
    <WithStyles(ForwardRef(Typography))
      variant="overline"
    >
      investigations.details.rb_number
    </WithStyles(ForwardRef(Typography))>
    <WithStyles(ForwardRef(Typography))>
      <b>
        1
      </b>
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={true}
  >
    <WithStyles(ForwardRef(Typography))
      variant="overline"
    >
      investigations.details.start_date
    </WithStyles(ForwardRef(Typography))>
    <WithStyles(ForwardRef(Typography))>
      <b>
        2019-07-23
      </b>
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
  <WithStyles(ForwardRef(Grid))
    item={true}
    xs={true}
  >
    <WithStyles(ForwardRef(Typography))
      variant="overline"
    >
      investigations.details.end_date
    </WithStyles(ForwardRef(Typography))>
    <WithStyles(ForwardRef(Typography))>
      <b>
        2019-07-24
      </b>
    </WithStyles(ForwardRef(Typography))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`Investigation table component renders investigation title as a link 1`] = `
<WithStyles(ForwardRef(Link))
  component={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "displayName": "Link",
      "propTypes": Object {
        "innerRef": [Function],
        "onClick": [Function],
        "replace": [Function],
        "target": [Function],
        "to": [Function],
      },
      "render": [Function],
    }
  }
  to="/browse/investigation/1/dataset"
>
  <ForwardRef(Link)
    classes={
      Object {
        "button": "MuiLink-button",
        "focusVisible": "Mui-focusVisible",
        "root": "MuiLink-root",
        "underlineAlways": "MuiLink-underlineAlways",
        "underlineHover": "MuiLink-underlineHover",
        "underlineNone": "MuiLink-underlineNone",
      }
    }
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    to="/browse/investigation/1/dataset"
  >
    <WithStyles(ForwardRef(Typography))
      className="MuiLink-root MuiLink-underlineHover"
      color="primary"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      onBlur={[Function]}
      onFocus={[Function]}
      to="/browse/investigation/1/dataset"
      variant="inherit"
    >
      <ForwardRef(Typography)
        className="MuiLink-root MuiLink-underlineHover"
        classes={
          Object {
            "alignCenter": "MuiTypography-alignCenter",
            "alignJustify": "MuiTypography-alignJustify",
            "alignLeft": "MuiTypography-alignLeft",
            "alignRight": "MuiTypography-alignRight",
            "body1": "MuiTypography-body1",
            "body2": "MuiTypography-body2",
            "button": "MuiTypography-button",
            "caption": "MuiTypography-caption",
            "colorError": "MuiTypography-colorError",
            "colorInherit": "MuiTypography-colorInherit",
            "colorPrimary": "MuiTypography-colorPrimary",
            "colorSecondary": "MuiTypography-colorSecondary",
            "colorTextPrimary": "MuiTypography-colorTextPrimary",
            "colorTextSecondary": "MuiTypography-colorTextSecondary",
            "displayBlock": "MuiTypography-displayBlock",
            "displayInline": "MuiTypography-displayInline",
            "gutterBottom": "MuiTypography-gutterBottom",
            "h1": "MuiTypography-h1",
            "h2": "MuiTypography-h2",
            "h3": "MuiTypography-h3",
            "h4": "MuiTypography-h4",
            "h5": "MuiTypography-h5",
            "h6": "MuiTypography-h6",
            "noWrap": "MuiTypography-noWrap",
            "overline": "MuiTypography-overline",
            "paragraph": "MuiTypography-paragraph",
            "root": "MuiTypography-root",
            "srOnly": "MuiTypography-srOnly",
            "subtitle1": "MuiTypography-subtitle1",
            "subtitle2": "MuiTypography-subtitle2",
          }
        }
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        onBlur={[Function]}
        onFocus={[Function]}
        to="/browse/investigation/1/dataset"
        variant="inherit"
      >
        <Link
          className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
          onBlur={[Function]}
          onFocus={[Function]}
          to="/browse/investigation/1/dataset"
        >
          <LinkAnchor
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
            href="/browse/investigation/1/dataset"
            navigate={[Function]}
            onBlur={[Function]}
            onFocus={[Function]}
          >
            <a
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
              href="/browse/investigation/1/dataset"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
            >
              Test 1
            </a>
          </LinkAnchor>
        </Link>
      </ForwardRef(Typography)>
    </WithStyles(ForwardRef(Typography))>
  </ForwardRef(Link)>
</WithStyles(ForwardRef(Link))>
`;
