// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ISIS Instruments table component renders correctly 1`] = `
Object {
  "classes": Object {
    "flexContainer": "VirtualizedTable-flexContainer-2",
    "headerFlexContainer": "VirtualizedTable-headerFlexContainer-3",
    "headerTableCell": "VirtualizedTable-headerTableCell-8",
    "table": "VirtualizedTable-table-1",
    "tableCell": "VirtualizedTable-tableCell-6",
    "tableNoPadding": "VirtualizedTable-tableNoPadding-7",
    "tableRow": "VirtualizedTable-tableRow-4",
    "tableRowHover": "VirtualizedTable-tableRowHover-5",
  },
  "columns": Array [
    Object {
      "cellContentRenderer": [Function],
      "dataKey": "fullName",
      "defaultSort": "asc",
      "filterComponent": [Function],
      "icon": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "label": "instruments.name",
    },
    Object {
      "dataKey": "type",
      "filterComponent": [Function],
      "icon": Object {
        "$$typeof": Symbol(react.memo),
        "compare": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "render": [Function],
        },
      },
      "label": "instruments.type",
    },
  ],
  "data": Array [
    Object {
      "description": "foo bar",
      "fullName": "Test instrument 1",
      "id": 1,
      "name": "Test 1",
      "url": "test url",
    },
    Object {
      "description": "foo bar",
      "id": 2,
      "name": "Test 2",
      "url": "test url",
    },
  ],
  "detailsPanel": [Function],
  "loadMoreRows": [Function],
  "onSort": [Function],
  "sort": Object {
    "fullName": "asc",
  },
  "totalRowCount": 1,
}
`;

exports[`ISIS Instruments table component renders names as links in StudyHierarchy 1`] = `
Array [
  <WithStyles(ForwardRef(Link))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    data-testid="isis-instrument-table-name"
    to="/browseStudyHierarchy/instrument/1/study"
  >
    <ForwardRef(Link)
      classes={
        Object {
          "button": "MuiLink-button",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiLink-root",
          "underlineAlways": "MuiLink-underlineAlways",
          "underlineHover": "MuiLink-underlineHover",
          "underlineNone": "MuiLink-underlineNone",
        }
      }
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      data-testid="isis-instrument-table-name"
      to="/browseStudyHierarchy/instrument/1/study"
    >
      <WithStyles(ForwardRef(Typography))
        className="MuiLink-root MuiLink-underlineHover"
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        data-testid="isis-instrument-table-name"
        onBlur={[Function]}
        onFocus={[Function]}
        to="/browseStudyHierarchy/instrument/1/study"
        variant="inherit"
      >
        <ForwardRef(Typography)
          className="MuiLink-root MuiLink-underlineHover"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          data-testid="isis-instrument-table-name"
          onBlur={[Function]}
          onFocus={[Function]}
          to="/browseStudyHierarchy/instrument/1/study"
          variant="inherit"
        >
          <Link
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
            data-testid="isis-instrument-table-name"
            onBlur={[Function]}
            onFocus={[Function]}
            to="/browseStudyHierarchy/instrument/1/study"
          >
            <LinkAnchor
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
              data-testid="isis-instrument-table-name"
              href="/browseStudyHierarchy/instrument/1/study"
              navigate={[Function]}
              onBlur={[Function]}
              onFocus={[Function]}
            >
              <a
                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                data-testid="isis-instrument-table-name"
                href="/browseStudyHierarchy/instrument/1/study"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
              >
                Test instrument 1
              </a>
            </LinkAnchor>
          </Link>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </ForwardRef(Link)>
  </WithStyles(ForwardRef(Link))>,
  <WithStyles(ForwardRef(Link))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    data-testid="isis-instrument-table-name"
    to="/browseStudyHierarchy/instrument/2/study"
  >
    <ForwardRef(Link)
      classes={
        Object {
          "button": "MuiLink-button",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiLink-root",
          "underlineAlways": "MuiLink-underlineAlways",
          "underlineHover": "MuiLink-underlineHover",
          "underlineNone": "MuiLink-underlineNone",
        }
      }
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      data-testid="isis-instrument-table-name"
      to="/browseStudyHierarchy/instrument/2/study"
    >
      <WithStyles(ForwardRef(Typography))
        className="MuiLink-root MuiLink-underlineHover"
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        data-testid="isis-instrument-table-name"
        onBlur={[Function]}
        onFocus={[Function]}
        to="/browseStudyHierarchy/instrument/2/study"
        variant="inherit"
      >
        <ForwardRef(Typography)
          className="MuiLink-root MuiLink-underlineHover"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          data-testid="isis-instrument-table-name"
          onBlur={[Function]}
          onFocus={[Function]}
          to="/browseStudyHierarchy/instrument/2/study"
          variant="inherit"
        >
          <Link
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
            data-testid="isis-instrument-table-name"
            onBlur={[Function]}
            onFocus={[Function]}
            to="/browseStudyHierarchy/instrument/2/study"
          >
            <LinkAnchor
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
              data-testid="isis-instrument-table-name"
              href="/browseStudyHierarchy/instrument/2/study"
              navigate={[Function]}
              onBlur={[Function]}
              onFocus={[Function]}
            >
              <a
                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                data-testid="isis-instrument-table-name"
                href="/browseStudyHierarchy/instrument/2/study"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
              >
                Test 2
              </a>
            </LinkAnchor>
          </Link>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </ForwardRef(Link)>
  </WithStyles(ForwardRef(Link))>,
]
`;

exports[`ISIS Instruments table component renders names as links when NOT in studyHierarchy 1`] = `
Array [
  <WithStyles(ForwardRef(Link))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    data-testid="isis-instrument-table-name"
    to="/browse/instrument/1/facilityCycle"
  >
    <ForwardRef(Link)
      classes={
        Object {
          "button": "MuiLink-button",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiLink-root",
          "underlineAlways": "MuiLink-underlineAlways",
          "underlineHover": "MuiLink-underlineHover",
          "underlineNone": "MuiLink-underlineNone",
        }
      }
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      data-testid="isis-instrument-table-name"
      to="/browse/instrument/1/facilityCycle"
    >
      <WithStyles(ForwardRef(Typography))
        className="MuiLink-root MuiLink-underlineHover"
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        data-testid="isis-instrument-table-name"
        onBlur={[Function]}
        onFocus={[Function]}
        to="/browse/instrument/1/facilityCycle"
        variant="inherit"
      >
        <ForwardRef(Typography)
          className="MuiLink-root MuiLink-underlineHover"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          data-testid="isis-instrument-table-name"
          onBlur={[Function]}
          onFocus={[Function]}
          to="/browse/instrument/1/facilityCycle"
          variant="inherit"
        >
          <Link
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
            data-testid="isis-instrument-table-name"
            onBlur={[Function]}
            onFocus={[Function]}
            to="/browse/instrument/1/facilityCycle"
          >
            <LinkAnchor
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
              data-testid="isis-instrument-table-name"
              href="/browse/instrument/1/facilityCycle"
              navigate={[Function]}
              onBlur={[Function]}
              onFocus={[Function]}
            >
              <a
                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                data-testid="isis-instrument-table-name"
                href="/browse/instrument/1/facilityCycle"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
              >
                Test instrument 1
              </a>
            </LinkAnchor>
          </Link>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </ForwardRef(Link)>
  </WithStyles(ForwardRef(Link))>,
  <WithStyles(ForwardRef(Link))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    data-testid="isis-instrument-table-name"
    to="/browse/instrument/2/facilityCycle"
  >
    <ForwardRef(Link)
      classes={
        Object {
          "button": "MuiLink-button",
          "focusVisible": "Mui-focusVisible",
          "root": "MuiLink-root",
          "underlineAlways": "MuiLink-underlineAlways",
          "underlineHover": "MuiLink-underlineHover",
          "underlineNone": "MuiLink-underlineNone",
        }
      }
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "displayName": "Link",
          "propTypes": Object {
            "innerRef": [Function],
            "onClick": [Function],
            "replace": [Function],
            "target": [Function],
            "to": [Function],
          },
          "render": [Function],
        }
      }
      data-testid="isis-instrument-table-name"
      to="/browse/instrument/2/facilityCycle"
    >
      <WithStyles(ForwardRef(Typography))
        className="MuiLink-root MuiLink-underlineHover"
        color="primary"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "Link",
            "propTypes": Object {
              "innerRef": [Function],
              "onClick": [Function],
              "replace": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          }
        }
        data-testid="isis-instrument-table-name"
        onBlur={[Function]}
        onFocus={[Function]}
        to="/browse/instrument/2/facilityCycle"
        variant="inherit"
      >
        <ForwardRef(Typography)
          className="MuiLink-root MuiLink-underlineHover"
          classes={
            Object {
              "alignCenter": "MuiTypography-alignCenter",
              "alignJustify": "MuiTypography-alignJustify",
              "alignLeft": "MuiTypography-alignLeft",
              "alignRight": "MuiTypography-alignRight",
              "body1": "MuiTypography-body1",
              "body2": "MuiTypography-body2",
              "button": "MuiTypography-button",
              "caption": "MuiTypography-caption",
              "colorError": "MuiTypography-colorError",
              "colorInherit": "MuiTypography-colorInherit",
              "colorPrimary": "MuiTypography-colorPrimary",
              "colorSecondary": "MuiTypography-colorSecondary",
              "colorTextPrimary": "MuiTypography-colorTextPrimary",
              "colorTextSecondary": "MuiTypography-colorTextSecondary",
              "displayBlock": "MuiTypography-displayBlock",
              "displayInline": "MuiTypography-displayInline",
              "gutterBottom": "MuiTypography-gutterBottom",
              "h1": "MuiTypography-h1",
              "h2": "MuiTypography-h2",
              "h3": "MuiTypography-h3",
              "h4": "MuiTypography-h4",
              "h5": "MuiTypography-h5",
              "h6": "MuiTypography-h6",
              "noWrap": "MuiTypography-noWrap",
              "overline": "MuiTypography-overline",
              "paragraph": "MuiTypography-paragraph",
              "root": "MuiTypography-root",
              "srOnly": "MuiTypography-srOnly",
              "subtitle1": "MuiTypography-subtitle1",
              "subtitle2": "MuiTypography-subtitle2",
            }
          }
          color="primary"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "Link",
              "propTypes": Object {
                "innerRef": [Function],
                "onClick": [Function],
                "replace": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            }
          }
          data-testid="isis-instrument-table-name"
          onBlur={[Function]}
          onFocus={[Function]}
          to="/browse/instrument/2/facilityCycle"
          variant="inherit"
        >
          <Link
            className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
            data-testid="isis-instrument-table-name"
            onBlur={[Function]}
            onFocus={[Function]}
            to="/browse/instrument/2/facilityCycle"
          >
            <LinkAnchor
              className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
              data-testid="isis-instrument-table-name"
              href="/browse/instrument/2/facilityCycle"
              navigate={[Function]}
              onBlur={[Function]}
              onFocus={[Function]}
            >
              <a
                className="MuiTypography-root MuiLink-root MuiLink-underlineHover MuiTypography-colorPrimary"
                data-testid="isis-instrument-table-name"
                href="/browse/instrument/2/facilityCycle"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
              >
                Test 2
              </a>
            </LinkAnchor>
          </Link>
        </ForwardRef(Typography)>
      </WithStyles(ForwardRef(Typography))>
    </ForwardRef(Link)>
  </WithStyles(ForwardRef(Link))>,
]
`;
